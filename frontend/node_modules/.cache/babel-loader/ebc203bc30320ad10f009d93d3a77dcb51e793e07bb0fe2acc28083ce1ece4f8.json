{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\HandwritingTherapyApp\\\\frontend\\\\src\\\\components\\\\CanvasDrawing.js\",\n  _s = $RefreshSig$();\n// ✅ CanvasDrawing with fully inline stroke listener (drawing + tracking)\nimport React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { ClipLoader } from \"react-spinners\";\nimport successSound from \"../assets/success-chime.mp3\";\nimport { startTracking, recordStrokePoint, finalizeStroke } from \"../agents/tracking_agent\";\nimport { logAttempt } from \"../agents/tracking_agent/session_logger\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CanvasDrawing({\n  mcp,\n  patientName,\n  sessionManager,\n  onComplete\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const drawingRef = useRef(false);\n  const currentStrokesRef = useRef([]); // ✅ Track all strokes\n\n  const [processing, setProcessing] = useState(false);\n  const [predictionCount, setPredictionCount] = useState(0);\n  const [canvasReady, setCanvasReady] = useState(false);\n  const [hasDrawn, setHasDrawn] = useState(false);\n  const [floatingDigit, setFloatingDigit] = useState(null);\n  const successAudio = new Audio(successSound);\n  const currentDigit = sessionManager.getCurrentDigit();\n  const applyCanvasStyles = useCallback(() => {\n    const ctx = ctxRef.current;\n    if (!ctx || !canvasRef.current) return;\n    ctx.fillStyle = \"white\";\n    ctx.strokeStyle = \"black\";\n    ctx.lineWidth = 12;\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n    ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  }, []);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext(\"2d\");\n    ctxRef.current = ctx;\n    applyCanvasStyles();\n    startTracking({\n      patientName\n    });\n    currentStrokesRef.current = [];\n    const getPosition = e => {\n      var _e$touches, _e$touches$, _e$touches2, _e$touches2$, _e$pressure;\n      const rect = canvas.getBoundingClientRect();\n      return {\n        x: (e.clientX || ((_e$touches = e.touches) === null || _e$touches === void 0 ? void 0 : (_e$touches$ = _e$touches[0]) === null || _e$touches$ === void 0 ? void 0 : _e$touches$.clientX)) - rect.left,\n        y: (e.clientY || ((_e$touches2 = e.touches) === null || _e$touches2 === void 0 ? void 0 : (_e$touches2$ = _e$touches2[0]) === null || _e$touches2$ === void 0 ? void 0 : _e$touches2$.clientY)) - rect.top,\n        pressure: (_e$pressure = e.pressure) !== null && _e$pressure !== void 0 ? _e$pressure : 0.5,\n        timestamp: Date.now()\n      };\n    };\n    const handleComplete = async () => {\n      if (!hasDrawn) return;\n      setProcessing(true);\n      const canvas = canvasRef.current;\n      const dataURL = canvas.toDataURL();\n      const strokes = currentStrokesRef.current;\n      const {\n        predictedDigit,\n        feedbackText\n      } = await mcp.processDrawing(dataURL);\n      const correct = predictedDigit === currentDigit;\n      logAttempt({\n        targetDigit: currentDigit,\n        predictedDigit,\n        correct,\n        feedbackText,\n        strokes\n      });\n      onComplete(predictedDigit, correct, feedbackText, strokes);\n      resetCanvas();\n      setHasDrawn(false);\n      setProcessing(false);\n    };\n    const handlePointerDown = e => {\n      const ctx = ctxRef.current;\n      if (!ctx) return;\n      const point = getPosition(e);\n      ctx.beginPath();\n      ctx.moveTo(point.x, point.y);\n      recordStrokePoint(point);\n      currentStrokesRef.current.push({\n        x: point.x,\n        y: point.y,\n        type: \"start\"\n      });\n      drawingRef.current = true;\n      setHasDrawn(true);\n    };\n    const handlePointerMove = e => {\n      if (!drawingRef.current) return;\n      const ctx = ctxRef.current;\n      const point = getPosition(e);\n      ctx.lineTo(point.x, point.y);\n      ctx.stroke();\n      recordStrokePoint(point);\n      currentStrokesRef.current.push({\n        x: point.x,\n        y: point.y,\n        type: \"draw\"\n      });\n    };\n    const handlePointerUp = () => {\n      if (!drawingRef.current) return;\n      const ctx = ctxRef.current;\n      ctx.closePath();\n      drawingRef.current = false;\n      currentStrokesRef.current.push({\n        type: \"end\"\n      });\n      finalizeStroke();\n      handleComplete();\n    };\n    canvas.addEventListener(\"pointerdown\", handlePointerDown);\n    canvas.addEventListener(\"pointermove\", handlePointerMove);\n    canvas.addEventListener(\"pointerup\", handlePointerUp);\n    canvas.addEventListener(\"pointercancel\", handlePointerUp);\n    setCanvasReady(true);\n    return () => {\n      canvas.removeEventListener(\"pointerdown\", handlePointerDown);\n      canvas.removeEventListener(\"pointermove\", handlePointerMove);\n      canvas.removeEventListener(\"pointerup\", handlePointerUp);\n      canvas.removeEventListener(\"pointercancel\", handlePointerUp);\n    };\n  }, [patientName, currentDigit, applyCanvasStyles]);\n  const resetCanvas = () => {\n    if (!canvasRef.current || !ctxRef.current) return;\n    applyCanvasStyles();\n    currentStrokesRef.current = [];\n  };\n  const clearCanvas = () => {\n    resetCanvas();\n    setHasDrawn(false);\n    drawingRef.current = false;\n  };\n  const commonButtonClasses = \"px-6 py-2 rounded-full text-white font-semibold transition duration-300 transform hover:scale-105 focus:outline-none focus:ring-2\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative flex flex-col items-center space-y-4 mt-4 w-full max-w-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"z-50 rounded-xl border bg-white border-black cursor-crosshair\",\n      width: 300,\n      height: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-4\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${commonButtonClasses} bg-gray-500 hover:bg-gray-600 focus:ring-gray-300`,\n        onClick: clearCanvas,\n        disabled: processing || !canvasReady,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), floatingDigit && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `absolute text-5xl font-bold select-none pointer-events-none \n            ${floatingDigit.isCorrect ? \"text-green-400 animate-float-up\" : \"text-red-400 animate-float-down\"} \n            left-1/2 transform -translate-x-1/2 top-1/2`,\n      style: {\n        zIndex: 100\n      },\n      children: floatingDigit.digit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_s(CanvasDrawing, \"DXdXdZ5NDtAKjlKWNZaMU3VWv6k=\");\n_c = CanvasDrawing;\nexport default CanvasDrawing;\nvar _c;\n$RefreshReg$(_c, \"CanvasDrawing\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","toast","ClipLoader","successSound","startTracking","recordStrokePoint","finalizeStroke","logAttempt","jsxDEV","_jsxDEV","CanvasDrawing","mcp","patientName","sessionManager","onComplete","_s","canvasRef","ctxRef","drawingRef","currentStrokesRef","processing","setProcessing","predictionCount","setPredictionCount","canvasReady","setCanvasReady","hasDrawn","setHasDrawn","floatingDigit","setFloatingDigit","successAudio","Audio","currentDigit","getCurrentDigit","applyCanvasStyles","ctx","current","fillStyle","strokeStyle","lineWidth","lineCap","lineJoin","fillRect","width","height","canvas","getContext","getPosition","e","_e$touches","_e$touches$","_e$touches2","_e$touches2$","_e$pressure","rect","getBoundingClientRect","x","clientX","touches","left","y","clientY","top","pressure","timestamp","Date","now","handleComplete","dataURL","toDataURL","strokes","predictedDigit","feedbackText","processDrawing","correct","targetDigit","resetCanvas","handlePointerDown","point","beginPath","moveTo","push","type","handlePointerMove","lineTo","stroke","handlePointerUp","closePath","addEventListener","removeEventListener","clearCanvas","commonButtonClasses","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","isCorrect","style","zIndex","digit","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/HandwritingTherapyApp/frontend/src/components/CanvasDrawing.js"],"sourcesContent":["// ✅ CanvasDrawing with fully inline stroke listener (drawing + tracking)\r\nimport React, { useRef, useEffect, useState, useCallback } from \"react\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { ClipLoader } from \"react-spinners\";\r\nimport successSound from \"../assets/success-chime.mp3\";\r\nimport { startTracking, recordStrokePoint, finalizeStroke } from \"../agents/tracking_agent\";\r\nimport { logAttempt } from \"../agents/tracking_agent/session_logger\";\r\n\r\nfunction CanvasDrawing({ mcp, patientName, sessionManager, onComplete }) {\r\n  const canvasRef = useRef(null);\r\n  const ctxRef = useRef(null);\r\n  const drawingRef = useRef(false);\r\n  const currentStrokesRef = useRef([]); // ✅ Track all strokes\r\n\r\n  const [processing, setProcessing] = useState(false);\r\n  const [predictionCount, setPredictionCount] = useState(0);\r\n  const [canvasReady, setCanvasReady] = useState(false);\r\n  const [hasDrawn, setHasDrawn] = useState(false);\r\n  const [floatingDigit, setFloatingDigit] = useState(null);\r\n\r\n  const successAudio = new Audio(successSound);\r\n  const currentDigit = sessionManager.getCurrentDigit();\r\n\r\n  const applyCanvasStyles = useCallback(() => {\r\n    const ctx = ctxRef.current;\r\n    if (!ctx || !canvasRef.current) return;\r\n\r\n    ctx.fillStyle = \"white\";\r\n    ctx.strokeStyle = \"black\";\r\n    ctx.lineWidth = 12;\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctxRef.current = ctx;\r\n    applyCanvasStyles();\r\n    startTracking({ patientName });\r\n    currentStrokesRef.current = [];\r\n\r\n    const getPosition = (e) => {\r\n      const rect = canvas.getBoundingClientRect();\r\n      return {\r\n        x: (e.clientX || e.touches?.[0]?.clientX) - rect.left,\r\n        y: (e.clientY || e.touches?.[0]?.clientY) - rect.top,\r\n        pressure: e.pressure ?? 0.5,\r\n        timestamp: Date.now(),\r\n      };\r\n    };\r\n\r\n    const handleComplete = async () => {\r\n      if (!hasDrawn) return;\r\n      setProcessing(true);\r\n\r\n      const canvas = canvasRef.current;\r\n      const dataURL = canvas.toDataURL();\r\n      const strokes = currentStrokesRef.current;\r\n\r\n      const { predictedDigit, feedbackText } = await mcp.processDrawing(dataURL);\r\n      const correct = predictedDigit === currentDigit;\r\n\r\n      logAttempt({\r\n        targetDigit: currentDigit,\r\n        predictedDigit,\r\n        correct,\r\n        feedbackText,\r\n        strokes,\r\n      });\r\n\r\n      onComplete(predictedDigit, correct, feedbackText, strokes);\r\n\r\n      resetCanvas();\r\n      setHasDrawn(false);\r\n      setProcessing(false);\r\n    };\r\n\r\n    const handlePointerDown = (e) => {\r\n      const ctx = ctxRef.current;\r\n      if (!ctx) return;\r\n\r\n      const point = getPosition(e);\r\n      ctx.beginPath();\r\n      ctx.moveTo(point.x, point.y);\r\n      recordStrokePoint(point);\r\n      currentStrokesRef.current.push({ x: point.x, y: point.y, type: \"start\" });\r\n      drawingRef.current = true;\r\n      setHasDrawn(true);\r\n    };\r\n\r\n    const handlePointerMove = (e) => {\r\n      if (!drawingRef.current) return;\r\n\r\n      const ctx = ctxRef.current;\r\n      const point = getPosition(e);\r\n      ctx.lineTo(point.x, point.y);\r\n      ctx.stroke();\r\n      recordStrokePoint(point);\r\n      currentStrokesRef.current.push({ x: point.x, y: point.y, type: \"draw\" });\r\n    };\r\n\r\n    const handlePointerUp = () => {\r\n      if (!drawingRef.current) return;\r\n      const ctx = ctxRef.current;\r\n      ctx.closePath();\r\n      drawingRef.current = false;\r\n      currentStrokesRef.current.push({ type: \"end\" });\r\n      finalizeStroke();\r\n      handleComplete();\r\n    };\r\n\r\n    canvas.addEventListener(\"pointerdown\", handlePointerDown);\r\n    canvas.addEventListener(\"pointermove\", handlePointerMove);\r\n    canvas.addEventListener(\"pointerup\", handlePointerUp);\r\n    canvas.addEventListener(\"pointercancel\", handlePointerUp);\r\n\r\n    setCanvasReady(true);\r\n\r\n    return () => {\r\n      canvas.removeEventListener(\"pointerdown\", handlePointerDown);\r\n      canvas.removeEventListener(\"pointermove\", handlePointerMove);\r\n      canvas.removeEventListener(\"pointerup\", handlePointerUp);\r\n      canvas.removeEventListener(\"pointercancel\", handlePointerUp);\r\n    };\r\n  }, [patientName, currentDigit, applyCanvasStyles]);\r\n\r\n  const resetCanvas = () => {\r\n    if (!canvasRef.current || !ctxRef.current) return;\r\n    applyCanvasStyles();\r\n    currentStrokesRef.current = [];\r\n  };\r\n\r\n  const clearCanvas = () => {\r\n    resetCanvas();\r\n    setHasDrawn(false);\r\n    drawingRef.current = false;\r\n  };\r\n\r\n  const commonButtonClasses =\r\n    \"px-6 py-2 rounded-full text-white font-semibold transition duration-300 transform hover:scale-105 focus:outline-none focus:ring-2\";\r\n\r\n  return (\r\n    <div className=\"relative flex flex-col items-center space-y-4 mt-4 w-full max-w-md\">\r\n      <canvas\r\n        ref={canvasRef}\r\n        className=\"z-50 rounded-xl border bg-white border-black cursor-crosshair\"\r\n        width={300}\r\n        height={300}\r\n      />\r\n\r\n      <div className=\"flex flex-wrap gap-4\">\r\n        <button\r\n          className={`${commonButtonClasses} bg-gray-500 hover:bg-gray-600 focus:ring-gray-300`}\r\n          onClick={clearCanvas}\r\n          disabled={processing || !canvasReady}\r\n        >\r\n          Clear\r\n        </button>\r\n      </div>\r\n\r\n      {floatingDigit && (\r\n        <div\r\n          className={`absolute text-5xl font-bold select-none pointer-events-none \r\n            ${floatingDigit.isCorrect ? \"text-green-400 animate-float-up\" : \"text-red-400 animate-float-down\"} \r\n            left-1/2 transform -translate-x-1/2 top-1/2`}\r\n          style={{ zIndex: 100 }}\r\n        >\r\n          {floatingDigit.digit}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CanvasDrawing;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}