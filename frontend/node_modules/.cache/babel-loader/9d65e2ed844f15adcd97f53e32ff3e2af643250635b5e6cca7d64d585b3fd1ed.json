{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\HandwritingTherapyApp\\\\frontend\\\\src\\\\components\\\\CanvasDrawing.js\",\n  _s = $RefreshSig$();\n// ✅ Fixed CanvasDrawing.js — strokes now render AND track enriched data\nimport React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { ClipLoader } from \"react-spinners\";\nimport successSound from \"../assets/success-chime.mp3\";\nimport { startTracking } from \"../agents/tracking_agent\";\nimport { logAttempt } from \"../agents/tracking_agent/session_logger\";\nimport { startListening, stopListening } from \"../agents/tracking_agent/stroke_listener\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CanvasDrawing({\n  mcp,\n  patientName,\n  sessionManager,\n  onComplete\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const drawingRef = useRef(false);\n  const strokeStartedRef = useRef(false);\n  const [processing, setProcessing] = useState(false);\n  const [predictionCount, setPredictionCount] = useState(0);\n  const [canvasReady, setCanvasReady] = useState(false);\n  const [hasDrawn, setHasDrawn] = useState(false);\n  const [floatingDigit, setFloatingDigit] = useState(null);\n  const successAudio = new Audio(successSound);\n  const currentDigit = sessionManager.getCurrentDigit();\n  const applyCanvasStyles = useCallback(() => {\n    const ctx = ctxRef.current;\n    if (!ctx || !canvasRef.current) return;\n    ctx.fillStyle = \"white\";\n    ctx.strokeStyle = \"black\";\n    ctx.lineWidth = 12;\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n    ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  }, []);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext(\"2d\");\n    ctxRef.current = ctx;\n    applyCanvasStyles();\n    startTracking({\n      patientName\n    });\n    startListening(canvas, point => {\n      const ctx = ctxRef.current;\n      if (!ctx) return;\n      if (!drawingRef.current) {\n        ctx.beginPath();\n        ctx.moveTo(point.x, point.y);\n        drawingRef.current = true;\n        setHasDrawn(true);\n      } else {\n        ctx.lineTo(point.x, point.y);\n        ctx.stroke();\n      }\n      import(\"../agents/tracking_agent\").then(({\n        recordStrokePoint\n      }) => {\n        recordStrokePoint(point);\n      });\n    });\n    const stopDrawing = () => {\n      if (drawingRef.current && ctxRef.current) {\n        ctxRef.current.closePath();\n        drawingRef.current = false;\n        import(\"../agents/tracking_agent\").then(({\n          finalizeStroke\n        }) => {\n          finalizeStroke();\n        });\n      }\n    };\n    canvas.addEventListener(\"mouseup\", stopDrawing);\n    canvas.addEventListener(\"mouseleave\", stopDrawing);\n    canvas.addEventListener(\"touchend\", stopDrawing);\n    canvas.addEventListener(\"touchcancel\", stopDrawing);\n    setCanvasReady(true);\n    return () => {\n      stopListening();\n      canvas.removeEventListener(\"mouseup\", stopDrawing);\n      canvas.removeEventListener(\"mouseleave\", stopDrawing);\n      canvas.removeEventListener(\"touchend\", stopDrawing);\n      canvas.removeEventListener(\"touchcancel\", stopDrawing);\n    };\n  }, [patientName, currentDigit, applyCanvasStyles]);\n  const clearCanvas = () => {\n    if (!canvasRef.current || !ctxRef.current) return;\n    applyCanvasStyles();\n    setHasDrawn(false);\n    drawingRef.current = false;\n    strokeStartedRef.current = false;\n  };\n  const handlePredict = async () => {\n    if (!canvasRef.current || !hasDrawn) {\n      toast.error(\"Please draw something first!\");\n      return;\n    }\n    try {\n      setProcessing(true);\n      const dataURL = canvasRef.current.toDataURL(\"image/png\");\n      const {\n        predictedDigit,\n        feedbackText\n      } = await mcp.processDrawing(dataURL);\n      const correct = parseInt(predictedDigit) === currentDigit;\n      setFloatingDigit({\n        digit: predictedDigit,\n        isCorrect: correct\n      });\n      setTimeout(() => setFloatingDigit(null), 1200);\n      sessionManager.registerAttempt(predictedDigit, correct, feedbackText);\n      logAttempt({\n        targetDigit: currentDigit,\n        predictedDigit: parseInt(predictedDigit),\n        correct,\n        feedbackText,\n        timestamp: new Date().toISOString(),\n        patientName\n      });\n      if (correct) {\n        successAudio.play();\n        toast.success(`✅ Correct! You wrote ${currentDigit}\\nFeedback: ${feedbackText}`, {\n          duration: 5000,\n          style: {\n            whiteSpace: \"pre-line\"\n          }\n        });\n        setPredictionCount(prev => prev + 1);\n        onComplete();\n      } else {\n        toast.error(`❌ Try again! You wrote ${predictedDigit}, not ${currentDigit}.`);\n      }\n      clearCanvas();\n    } catch (error) {\n      console.error(\"Prediction failed:\", error);\n      toast.error(\"Something went wrong while predicting. Please try again.\");\n    } finally {\n      setProcessing(false);\n    }\n  };\n  const commonButtonClasses = \"px-6 py-2 rounded-full text-white font-semibold transition duration-300 transform hover:scale-105 focus:outline-none focus:ring-2\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative flex flex-col items-center space-y-4 mt-4 w-full max-w-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"z-50 rounded-xl border bg-white border-black cursor-crosshair\",\n      width: 300,\n      height: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePredict,\n        className: `${commonButtonClasses} bg-blue-500 hover:bg-blue-600 focus:ring-blue-300 flex items-center justify-center gap-2`,\n        disabled: processing || !canvasReady,\n        children: processing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ClipLoader, {\n            size: 20,\n            color: \"#fff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), \"Processing...\"]\n        }, void 0, true) : \"Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearCanvas,\n        className: `${commonButtonClasses} bg-gray-500 hover:bg-gray-600 focus:ring-gray-300`,\n        disabled: processing || !canvasReady,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), predictionCount > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-blue-700 font-medium\",\n      children: [\"\\u2728 Predictions made: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-bold\",\n        children: predictionCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this), floatingDigit && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `absolute text-5xl font-bold select-none pointer-events-none \n            ${floatingDigit.isCorrect ? \"text-green-400 animate-float-up\" : \"text-red-400 animate-float-down\"} \n            left-1/2 transform -translate-x-1/2 top-1/2`,\n      style: {\n        zIndex: 100\n      },\n      children: floatingDigit.digit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s(CanvasDrawing, \"pdGnbiSYxOAWJIH1pOsOytn6TEA=\");\n_c = CanvasDrawing;\nexport default CanvasDrawing;\nvar _c;\n$RefreshReg$(_c, \"CanvasDrawing\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","toast","ClipLoader","successSound","startTracking","logAttempt","startListening","stopListening","jsxDEV","_jsxDEV","Fragment","_Fragment","CanvasDrawing","mcp","patientName","sessionManager","onComplete","_s","canvasRef","ctxRef","drawingRef","strokeStartedRef","processing","setProcessing","predictionCount","setPredictionCount","canvasReady","setCanvasReady","hasDrawn","setHasDrawn","floatingDigit","setFloatingDigit","successAudio","Audio","currentDigit","getCurrentDigit","applyCanvasStyles","ctx","current","fillStyle","strokeStyle","lineWidth","lineCap","lineJoin","fillRect","width","height","canvas","getContext","point","beginPath","moveTo","x","y","lineTo","stroke","then","recordStrokePoint","stopDrawing","closePath","finalizeStroke","addEventListener","removeEventListener","clearCanvas","handlePredict","error","dataURL","toDataURL","predictedDigit","feedbackText","processDrawing","correct","parseInt","digit","isCorrect","setTimeout","registerAttempt","targetDigit","timestamp","Date","toISOString","play","success","duration","style","whiteSpace","prev","console","commonButtonClasses","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","size","color","zIndex","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/HandwritingTherapyApp/frontend/src/components/CanvasDrawing.js"],"sourcesContent":["// ✅ Fixed CanvasDrawing.js — strokes now render AND track enriched data\r\nimport React, { useRef, useEffect, useState, useCallback } from \"react\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { ClipLoader } from \"react-spinners\";\r\nimport successSound from \"../assets/success-chime.mp3\";\r\nimport { startTracking } from \"../agents/tracking_agent\";\r\nimport { logAttempt } from \"../agents/tracking_agent/session_logger\";\r\nimport { startListening, stopListening } from \"../agents/tracking_agent/stroke_listener\";\r\n\r\nfunction CanvasDrawing({ mcp, patientName, sessionManager, onComplete }) {\r\n  const canvasRef = useRef(null);\r\n  const ctxRef = useRef(null);\r\n  const drawingRef = useRef(false);\r\n  const strokeStartedRef = useRef(false);\r\n\r\n  const [processing, setProcessing] = useState(false);\r\n  const [predictionCount, setPredictionCount] = useState(0);\r\n  const [canvasReady, setCanvasReady] = useState(false);\r\n  const [hasDrawn, setHasDrawn] = useState(false);\r\n  const [floatingDigit, setFloatingDigit] = useState(null);\r\n\r\n  const successAudio = new Audio(successSound);\r\n  const currentDigit = sessionManager.getCurrentDigit();\r\n\r\n  const applyCanvasStyles = useCallback(() => {\r\n    const ctx = ctxRef.current;\r\n    if (!ctx || !canvasRef.current) return;\r\n\r\n    ctx.fillStyle = \"white\";\r\n    ctx.strokeStyle = \"black\";\r\n    ctx.lineWidth = 12;\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctxRef.current = ctx;\r\n    applyCanvasStyles();\r\n\r\n    startTracking({ patientName });\r\n\r\n    startListening(canvas, (point) => {\r\n      const ctx = ctxRef.current;\r\n      if (!ctx) return;\r\n\r\n      if (!drawingRef.current) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(point.x, point.y);\r\n        drawingRef.current = true;\r\n        setHasDrawn(true);\r\n      } else {\r\n        ctx.lineTo(point.x, point.y);\r\n        ctx.stroke();\r\n      }\r\n\r\n      import(\"../agents/tracking_agent\").then(({ recordStrokePoint }) => {\r\n        recordStrokePoint(point);\r\n      });\r\n    });\r\n\r\n    const stopDrawing = () => {\r\n      if (drawingRef.current && ctxRef.current) {\r\n        ctxRef.current.closePath();\r\n        drawingRef.current = false;\r\n        import(\"../agents/tracking_agent\").then(({ finalizeStroke }) => {\r\n          finalizeStroke();\r\n        });\r\n      }\r\n    };\r\n\r\n    canvas.addEventListener(\"mouseup\", stopDrawing);\r\n    canvas.addEventListener(\"mouseleave\", stopDrawing);\r\n    canvas.addEventListener(\"touchend\", stopDrawing);\r\n    canvas.addEventListener(\"touchcancel\", stopDrawing);\r\n\r\n    setCanvasReady(true);\r\n\r\n    return () => {\r\n      stopListening();\r\n      canvas.removeEventListener(\"mouseup\", stopDrawing);\r\n      canvas.removeEventListener(\"mouseleave\", stopDrawing);\r\n      canvas.removeEventListener(\"touchend\", stopDrawing);\r\n      canvas.removeEventListener(\"touchcancel\", stopDrawing);\r\n    };\r\n  }, [patientName, currentDigit, applyCanvasStyles]);\r\n\r\n  const clearCanvas = () => {\r\n    if (!canvasRef.current || !ctxRef.current) return;\r\n    applyCanvasStyles();\r\n    setHasDrawn(false);\r\n    drawingRef.current = false;\r\n    strokeStartedRef.current = false;\r\n  };\r\n\r\n  const handlePredict = async () => {\r\n    if (!canvasRef.current || !hasDrawn) {\r\n      toast.error(\"Please draw something first!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setProcessing(true);\r\n      const dataURL = canvasRef.current.toDataURL(\"image/png\");\r\n      const { predictedDigit, feedbackText } = await mcp.processDrawing(dataURL);\r\n      const correct = parseInt(predictedDigit) === currentDigit;\r\n\r\n      setFloatingDigit({ digit: predictedDigit, isCorrect: correct });\r\n      setTimeout(() => setFloatingDigit(null), 1200);\r\n\r\n      sessionManager.registerAttempt(predictedDigit, correct, feedbackText);\r\n\r\n      logAttempt({\r\n        targetDigit: currentDigit,\r\n        predictedDigit: parseInt(predictedDigit),\r\n        correct,\r\n        feedbackText,\r\n        timestamp: new Date().toISOString(),\r\n        patientName\r\n      });\r\n\r\n      if (correct) {\r\n        successAudio.play();\r\n        toast.success(`✅ Correct! You wrote ${currentDigit}\\nFeedback: ${feedbackText}`, {\r\n          duration: 5000,\r\n          style: { whiteSpace: \"pre-line\" },\r\n        });\r\n        setPredictionCount((prev) => prev + 1);\r\n        onComplete();\r\n      } else {\r\n        toast.error(`❌ Try again! You wrote ${predictedDigit}, not ${currentDigit}.`);\r\n      }\r\n\r\n      clearCanvas();\r\n    } catch (error) {\r\n      console.error(\"Prediction failed:\", error);\r\n      toast.error(\"Something went wrong while predicting. Please try again.\");\r\n    } finally {\r\n      setProcessing(false);\r\n    }\r\n  };\r\n\r\n  const commonButtonClasses =\r\n    \"px-6 py-2 rounded-full text-white font-semibold transition duration-300 transform hover:scale-105 focus:outline-none focus:ring-2\";\r\n\r\n  return (\r\n    <div className=\"relative flex flex-col items-center space-y-4 mt-4 w-full max-w-md\">\r\n      <canvas\r\n        ref={canvasRef}\r\n        className=\"z-50 rounded-xl border bg-white border-black cursor-crosshair\"\r\n        width={300}\r\n        height={300}\r\n      />\r\n\r\n      <div className=\"flex flex-wrap gap-4\">\r\n        <button\r\n          onClick={handlePredict}\r\n          className={`${commonButtonClasses} bg-blue-500 hover:bg-blue-600 focus:ring-blue-300 flex items-center justify-center gap-2`}\r\n          disabled={processing || !canvasReady}\r\n        >\r\n          {processing ? (\r\n            <>\r\n              <ClipLoader size={20} color=\"#fff\" />\r\n              Processing...\r\n            </>\r\n          ) : (\r\n            \"Predict\"\r\n          )}\r\n        </button>\r\n\r\n        <button\r\n          onClick={clearCanvas}\r\n          className={`${commonButtonClasses} bg-gray-500 hover:bg-gray-600 focus:ring-gray-300`}\r\n          disabled={processing || !canvasReady}\r\n        >\r\n          Clear\r\n        </button>\r\n      </div>\r\n\r\n      {predictionCount > 0 && (\r\n        <p className=\"text-blue-700 font-medium\">\r\n          ✨ Predictions made: <span className=\"font-bold\">{predictionCount}</span>\r\n        </p>\r\n      )}\r\n\r\n      {floatingDigit && (\r\n        <div\r\n          className={`absolute text-5xl font-bold select-none pointer-events-none \r\n            ${floatingDigit.isCorrect ? \"text-green-400 animate-float-up\" : \"text-red-400 animate-float-down\"} \r\n            left-1/2 transform -translate-x-1/2 top-1/2`}\r\n          style={{ zIndex: 100 }}\r\n        >\r\n          {floatingDigit.digit}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CanvasDrawing;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}