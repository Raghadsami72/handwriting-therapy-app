{"ast":null,"code":"// agents/cnnAgent.js\nimport * as tf from '@tensorflow/tfjs';\nlet model = null;\nlet currentLanguage = null;\nexport async function loadModel(lang = \"en\") {\n  if (model && currentLanguage === lang) return model;\n  const path = lang === \"ar\" ? \"/models/arabic_model/model.json\" : \"/models/Final_PreluModel/model.json\";\n  try {\n    model = await tf.loadLayersModel(path);\n    currentLanguage = lang;\n    console.log(`✅ ${lang.toUpperCase()} model loaded.`);\n  } catch (error) {\n    console.error(`❌ Failed to load ${lang} model:`, error);\n    throw error;\n  }\n  return model;\n}\nexport async function predictDigit(dataURL) {\n  const lang = localStorage.getItem(\"language\") || \"en\";\n  await loadModel(lang);\n  const imageTensor = await preprocessDrawing(dataURL);\n  const prediction = model.predict(imageTensor);\n  const predictionArray = await prediction.array();\n  const predictedDigit = predictionArray[0].indexOf(Math.max(...predictionArray[0]));\n  return predictedDigit;\n}\nasync function preprocessDrawing(dataURL) {\n  const image = new Image();\n  image.src = dataURL;\n  await new Promise(res => image.onload = res);\n  return tf.browser.fromPixels(image, 1).resizeNearestNeighbor([28, 28]).toFloat().div(255.0).expandDims(0);\n}","map":{"version":3,"names":["tf","model","currentLanguage","loadModel","lang","path","loadLayersModel","console","log","toUpperCase","error","predictDigit","dataURL","localStorage","getItem","imageTensor","preprocessDrawing","prediction","predict","predictionArray","array","predictedDigit","indexOf","Math","max","image","Image","src","Promise","res","onload","browser","fromPixels","resizeNearestNeighbor","toFloat","div","expandDims"],"sources":["C:/Users/DELL/Desktop/HandwritingTherapyApp/frontend/src/agents/cnnAgent.js"],"sourcesContent":["// agents/cnnAgent.js\r\nimport * as tf from '@tensorflow/tfjs';\r\n\r\nlet model = null;\r\nlet currentLanguage = null;\r\n\r\nexport async function loadModel(lang = \"en\") {\r\n  if (model && currentLanguage === lang) return model;\r\n\r\n  const path = lang === \"ar\"\r\n    ? \"/models/arabic_model/model.json\"\r\n    : \"/models/Final_PreluModel/model.json\";\r\n\r\n  try {\r\n    model = await tf.loadLayersModel(path);\r\n    currentLanguage = lang;\r\n    console.log(`✅ ${lang.toUpperCase()} model loaded.`);\r\n  } catch (error) {\r\n    console.error(`❌ Failed to load ${lang} model:`, error);\r\n    throw error;\r\n  }\r\n\r\n  return model;\r\n}\r\n\r\nexport async function predictDigit(dataURL) {\r\n  const lang = localStorage.getItem(\"language\") || \"en\";\r\n  await loadModel(lang);\r\n\r\n  const imageTensor = await preprocessDrawing(dataURL);\r\n  const prediction = model.predict(imageTensor);\r\n  const predictionArray = await prediction.array();\r\n  const predictedDigit = predictionArray[0].indexOf(Math.max(...predictionArray[0]));\r\n\r\n  return predictedDigit;\r\n}\r\n\r\nasync function preprocessDrawing(dataURL) {\r\n  const image = new Image();\r\n  image.src = dataURL;\r\n  await new Promise((res) => (image.onload = res));\r\n\r\n  return tf.browser.fromPixels(image, 1)\r\n    .resizeNearestNeighbor([28, 28])\r\n    .toFloat()\r\n    .div(255.0)\r\n    .expandDims(0);\r\n}\r\n"],"mappings":"AAAA;AACA,OAAO,KAAKA,EAAE,MAAM,kBAAkB;AAEtC,IAAIC,KAAK,GAAG,IAAI;AAChB,IAAIC,eAAe,GAAG,IAAI;AAE1B,OAAO,eAAeC,SAASA,CAACC,IAAI,GAAG,IAAI,EAAE;EAC3C,IAAIH,KAAK,IAAIC,eAAe,KAAKE,IAAI,EAAE,OAAOH,KAAK;EAEnD,MAAMI,IAAI,GAAGD,IAAI,KAAK,IAAI,GACtB,iCAAiC,GACjC,qCAAqC;EAEzC,IAAI;IACFH,KAAK,GAAG,MAAMD,EAAE,CAACM,eAAe,CAACD,IAAI,CAAC;IACtCH,eAAe,GAAGE,IAAI;IACtBG,OAAO,CAACC,GAAG,CAAC,KAAKJ,IAAI,CAACK,WAAW,CAAC,CAAC,gBAAgB,CAAC;EACtD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,oBAAoBN,IAAI,SAAS,EAAEM,KAAK,CAAC;IACvD,MAAMA,KAAK;EACb;EAEA,OAAOT,KAAK;AACd;AAEA,OAAO,eAAeU,YAAYA,CAACC,OAAO,EAAE;EAC1C,MAAMR,IAAI,GAAGS,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI;EACrD,MAAMX,SAAS,CAACC,IAAI,CAAC;EAErB,MAAMW,WAAW,GAAG,MAAMC,iBAAiB,CAACJ,OAAO,CAAC;EACpD,MAAMK,UAAU,GAAGhB,KAAK,CAACiB,OAAO,CAACH,WAAW,CAAC;EAC7C,MAAMI,eAAe,GAAG,MAAMF,UAAU,CAACG,KAAK,CAAC,CAAC;EAChD,MAAMC,cAAc,GAAGF,eAAe,CAAC,CAAC,CAAC,CAACG,OAAO,CAACC,IAAI,CAACC,GAAG,CAAC,GAAGL,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;EAElF,OAAOE,cAAc;AACvB;AAEA,eAAeL,iBAAiBA,CAACJ,OAAO,EAAE;EACxC,MAAMa,KAAK,GAAG,IAAIC,KAAK,CAAC,CAAC;EACzBD,KAAK,CAACE,GAAG,GAAGf,OAAO;EACnB,MAAM,IAAIgB,OAAO,CAAEC,GAAG,IAAMJ,KAAK,CAACK,MAAM,GAAGD,GAAI,CAAC;EAEhD,OAAO7B,EAAE,CAAC+B,OAAO,CAACC,UAAU,CAACP,KAAK,EAAE,CAAC,CAAC,CACnCQ,qBAAqB,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAC/BC,OAAO,CAAC,CAAC,CACTC,GAAG,CAAC,KAAK,CAAC,CACVC,UAAU,CAAC,CAAC,CAAC;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}