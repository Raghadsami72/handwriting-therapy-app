{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\HandwritingTherapyApp\\\\frontend\\\\src\\\\components\\\\CanvasDrawing.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { ClipLoader } from \"react-spinners\";\nimport successSound from \"../assets/success-chime.mp3\";\nimport { startTracking } from \"../agents/tracking_agent\";\nimport { logAttempt } from \"../agents/tracking_agent/session_logger\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CanvasDrawing({\n  mcp,\n  patientName,\n  sessionManager,\n  onComplete\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const drawingRef = useRef(false);\n  const [processing, setProcessing] = useState(false);\n  const [predictionCount, setPredictionCount] = useState(0);\n  const [canvasReady, setCanvasReady] = useState(false);\n  const [hasDrawn, setHasDrawn] = useState(false);\n  const [floatingDigit, setFloatingDigit] = useState(null);\n  const successAudio = new Audio(successSound);\n  const currentDigit = sessionManager.getCurrentDigit();\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Set dimensions\n    canvas.width = 300;\n    canvas.height = 300;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.strokeStyle = \"white\";\n    ctx.lineWidth = 5;\n    ctx.lineCap = \"round\";\n    ctxRef.current = ctx;\n    const getCanvasCoordinates = e => {\n      const rect = canvas.getBoundingClientRect();\n      return {\n        x: e.clientX - rect.left,\n        y: e.clientY - rect.top\n      };\n    };\n    const startDrawing = e => {\n      drawingRef.current = true;\n      setHasDrawn(true);\n      const {\n        x,\n        y\n      } = getCanvasCoordinates(e);\n      ctxRef.current.beginPath();\n      ctxRef.current.moveTo(x, y);\n      startTracking({\n        patientName\n      });\n    };\n    const draw = e => {\n      if (!drawingRef.current) return;\n      const {\n        x,\n        y\n      } = getCanvasCoordinates(e);\n      ctxRef.current.lineTo(x, y);\n      ctxRef.current.stroke();\n    };\n    const stopDrawing = () => {\n      drawingRef.current = false;\n      ctxRef.current.closePath();\n    };\n    canvas.addEventListener(\"mousedown\", startDrawing);\n    canvas.addEventListener(\"mousemove\", draw);\n    canvas.addEventListener(\"mouseup\", stopDrawing);\n    canvas.addEventListener(\"mouseleave\", stopDrawing);\n    setCanvasReady(true);\n    return () => {\n      canvas.removeEventListener(\"mousedown\", startDrawing);\n      canvas.removeEventListener(\"mousemove\", draw);\n      canvas.removeEventListener(\"mouseup\", stopDrawing);\n      canvas.removeEventListener(\"mouseleave\", stopDrawing);\n    };\n  }, [patientName, currentDigit]);\n  const clearCanvas = () => {\n    if (!canvasRef.current || !ctxRef.current) return;\n    ctxRef.current.fillStyle = \"black\";\n    ctxRef.current.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    setHasDrawn(false);\n  };\n  const handlePredict = async () => {\n    if (!canvasRef.current || !hasDrawn) {\n      toast.error(\"Please draw something first!\");\n      return;\n    }\n    try {\n      setProcessing(true);\n      const dataURL = canvasRef.current.toDataURL(\"image/png\");\n      const {\n        predictedDigit,\n        feedbackText\n      } = await mcp.processDrawing(dataURL);\n      const correct = parseInt(predictedDigit) === currentDigit;\n      setFloatingDigit({\n        digit: predictedDigit,\n        isCorrect: correct\n      });\n      setTimeout(() => setFloatingDigit(null), 1200);\n      sessionManager.registerAttempt(predictedDigit, correct, feedbackText);\n      logAttempt({\n        targetDigit: currentDigit,\n        predictedDigit: parseInt(predictedDigit),\n        correct,\n        feedbackText,\n        timestamp: new Date().toISOString()\n      });\n      if (correct) {\n        successAudio.play();\n        toast.success(`✅ Correct! You wrote ${currentDigit}\\nFeedback: ${feedbackText}`, {\n          duration: 5000,\n          style: {\n            whiteSpace: \"pre-line\"\n          }\n        });\n        setPredictionCount(prev => prev + 1);\n        onComplete();\n      } else {\n        toast.error(`❌ Try again! You wrote ${predictedDigit}, not ${currentDigit}.`);\n      }\n      clearCanvas();\n    } catch (error) {\n      console.error(\"Prediction failed:\", error);\n      toast.error(\"Something went wrong while predicting. Please try again.\");\n    } finally {\n      setProcessing(false);\n    }\n  };\n  const commonButtonClasses = \"px-6 py-2 rounded-full text-white font-semibold transition duration-300 transform hover:scale-105 focus:outline-none focus:ring-2\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative flex flex-col items-center space-y-4 mt-4 w-full max-w-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${process.env.PUBLIC_URL}/tracing/${currentDigit}.png`,\n      alt: \"Tracing overlay\",\n      className: \"absolute w-[300px] h-[300px] opacity-20 pointer-events-none\",\n      style: {\n        zIndex: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 300,\n      height: 300,\n      className: \"z-10 rounded-xl border border-gray-300 bg-black cursor-crosshair\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePredict,\n        className: `${commonButtonClasses} bg-blue-500 hover:bg-blue-600 focus:ring-blue-300 flex items-center justify-center gap-2`,\n        \"aria-label\": \"Predict the drawn digit\",\n        disabled: processing || !canvasReady,\n        children: processing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ClipLoader, {\n            size: 20,\n            color: \"#fff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), \"Processing...\"]\n        }, void 0, true) : \"Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearCanvas,\n        className: `${commonButtonClasses} bg-gray-500 hover:bg-gray-600 focus:ring-gray-300`,\n        \"aria-label\": \"Clear the drawing canvas\",\n        disabled: processing || !canvasReady,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), predictionCount > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-blue-700 font-medium\",\n      children: [\"\\u2728 Predictions made: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-bold\",\n        children: predictionCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this), floatingDigit && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `absolute text-5xl font-bold select-none pointer-events-none \n            ${floatingDigit.isCorrect ? \"text-pink-300 animate-float-up\" : \"text-red-400 animate-float-down\"} \n            left-1/2 transform -translate-x-1/2 top-1/2`,\n      style: {\n        zIndex: 50\n      },\n      children: floatingDigit.digit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n_s(CanvasDrawing, \"R40yDbEe7pcjdOk3q1cQnOQOG2U=\");\n_c = CanvasDrawing;\nexport default CanvasDrawing;\nvar _c;\n$RefreshReg$(_c, \"CanvasDrawing\");","map":{"version":3,"names":["React","useRef","useEffect","useState","toast","ClipLoader","successSound","startTracking","logAttempt","jsxDEV","_jsxDEV","Fragment","_Fragment","CanvasDrawing","mcp","patientName","sessionManager","onComplete","_s","canvasRef","ctxRef","drawingRef","processing","setProcessing","predictionCount","setPredictionCount","canvasReady","setCanvasReady","hasDrawn","setHasDrawn","floatingDigit","setFloatingDigit","successAudio","Audio","currentDigit","getCurrentDigit","canvas","current","width","height","ctx","getContext","fillStyle","fillRect","strokeStyle","lineWidth","lineCap","getCanvasCoordinates","e","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","startDrawing","beginPath","moveTo","draw","lineTo","stroke","stopDrawing","closePath","addEventListener","removeEventListener","clearCanvas","handlePredict","error","dataURL","toDataURL","predictedDigit","feedbackText","processDrawing","correct","parseInt","digit","isCorrect","setTimeout","registerAttempt","targetDigit","timestamp","Date","toISOString","play","success","duration","style","whiteSpace","prev","console","commonButtonClasses","className","children","src","process","env","PUBLIC_URL","alt","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","disabled","size","color","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/HandwritingTherapyApp/frontend/src/components/CanvasDrawing.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { ClipLoader } from \"react-spinners\";\r\nimport successSound from \"../assets/success-chime.mp3\";\r\nimport { startTracking } from \"../agents/tracking_agent\";\r\nimport { logAttempt } from \"../agents/tracking_agent/session_logger\";\r\n\r\nfunction CanvasDrawing({ mcp, patientName, sessionManager, onComplete }) {\r\n  const canvasRef = useRef(null);\r\n  const ctxRef = useRef(null);\r\n  const drawingRef = useRef(false);\r\n\r\n  const [processing, setProcessing] = useState(false);\r\n  const [predictionCount, setPredictionCount] = useState(0);\r\n  const [canvasReady, setCanvasReady] = useState(false);\r\n  const [hasDrawn, setHasDrawn] = useState(false);\r\n  const [floatingDigit, setFloatingDigit] = useState(null);\r\n\r\n  const successAudio = new Audio(successSound);\r\n  const currentDigit = sessionManager.getCurrentDigit();\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    // Set dimensions\r\n    canvas.width = 300;\r\n    canvas.height = 300;\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.fillStyle = \"black\";\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    ctx.strokeStyle = \"white\";\r\n    ctx.lineWidth = 5;\r\n    ctx.lineCap = \"round\";\r\n\r\n    ctxRef.current = ctx;\r\n\r\n    const getCanvasCoordinates = (e) => {\r\n      const rect = canvas.getBoundingClientRect();\r\n      return {\r\n        x: e.clientX - rect.left,\r\n        y: e.clientY - rect.top,\r\n      };\r\n    };\r\n\r\n    const startDrawing = (e) => {\r\n      drawingRef.current = true;\r\n      setHasDrawn(true);\r\n      const { x, y } = getCanvasCoordinates(e);\r\n      ctxRef.current.beginPath();\r\n      ctxRef.current.moveTo(x, y);\r\n      startTracking({ patientName });\r\n    };\r\n\r\n    const draw = (e) => {\r\n      if (!drawingRef.current) return;\r\n      const { x, y } = getCanvasCoordinates(e);\r\n      ctxRef.current.lineTo(x, y);\r\n      ctxRef.current.stroke();\r\n    };\r\n\r\n    const stopDrawing = () => {\r\n      drawingRef.current = false;\r\n      ctxRef.current.closePath();\r\n    };\r\n\r\n    canvas.addEventListener(\"mousedown\", startDrawing);\r\n    canvas.addEventListener(\"mousemove\", draw);\r\n    canvas.addEventListener(\"mouseup\", stopDrawing);\r\n    canvas.addEventListener(\"mouseleave\", stopDrawing);\r\n\r\n    setCanvasReady(true);\r\n\r\n    return () => {\r\n      canvas.removeEventListener(\"mousedown\", startDrawing);\r\n      canvas.removeEventListener(\"mousemove\", draw);\r\n      canvas.removeEventListener(\"mouseup\", stopDrawing);\r\n      canvas.removeEventListener(\"mouseleave\", stopDrawing);\r\n    };\r\n  }, [patientName, currentDigit]);\r\n\r\n  const clearCanvas = () => {\r\n    if (!canvasRef.current || !ctxRef.current) return;\r\n    ctxRef.current.fillStyle = \"black\";\r\n    ctxRef.current.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n    setHasDrawn(false);\r\n  };\r\n\r\n  const handlePredict = async () => {\r\n    if (!canvasRef.current || !hasDrawn) {\r\n      toast.error(\"Please draw something first!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setProcessing(true);\r\n      const dataURL = canvasRef.current.toDataURL(\"image/png\");\r\n      const { predictedDigit, feedbackText } = await mcp.processDrawing(dataURL);\r\n      const correct = parseInt(predictedDigit) === currentDigit;\r\n\r\n      setFloatingDigit({ digit: predictedDigit, isCorrect: correct });\r\n      setTimeout(() => setFloatingDigit(null), 1200);\r\n\r\n      sessionManager.registerAttempt(predictedDigit, correct, feedbackText);\r\n\r\n      logAttempt({\r\n        targetDigit: currentDigit,\r\n        predictedDigit: parseInt(predictedDigit),\r\n        correct,\r\n        feedbackText,\r\n        timestamp: new Date().toISOString(),\r\n      });\r\n\r\n      if (correct) {\r\n        successAudio.play();\r\n        toast.success(`✅ Correct! You wrote ${currentDigit}\\nFeedback: ${feedbackText}`, {\r\n          duration: 5000,\r\n          style: { whiteSpace: \"pre-line\" },\r\n        });\r\n        setPredictionCount((prev) => prev + 1);\r\n        onComplete();\r\n      } else {\r\n        toast.error(`❌ Try again! You wrote ${predictedDigit}, not ${currentDigit}.`);\r\n      }\r\n\r\n      clearCanvas();\r\n    } catch (error) {\r\n      console.error(\"Prediction failed:\", error);\r\n      toast.error(\"Something went wrong while predicting. Please try again.\");\r\n    } finally {\r\n      setProcessing(false);\r\n    }\r\n  };\r\n\r\n  const commonButtonClasses =\r\n    \"px-6 py-2 rounded-full text-white font-semibold transition duration-300 transform hover:scale-105 focus:outline-none focus:ring-2\";\r\n\r\n  return (\r\n    <div className=\"relative flex flex-col items-center space-y-4 mt-4 w-full max-w-md\">\r\n      <img \r\n        src={`${process.env.PUBLIC_URL}/tracing/${currentDigit}.png`} \r\n        alt=\"Tracing overlay\"\r\n        className=\"absolute w-[300px] h-[300px] opacity-20 pointer-events-none\"\r\n        style={{ zIndex: 1 }}\r\n      />\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={300}\r\n        height={300}\r\n        className=\"z-10 rounded-xl border border-gray-300 bg-black cursor-crosshair\"\r\n      />\r\n\r\n      <div className=\"flex gap-4\">\r\n        <button\r\n          onClick={handlePredict}\r\n          className={`${commonButtonClasses} bg-blue-500 hover:bg-blue-600 focus:ring-blue-300 flex items-center justify-center gap-2`}\r\n          aria-label=\"Predict the drawn digit\"\r\n          disabled={processing || !canvasReady}\r\n        >\r\n          {processing ? (\r\n            <>\r\n              <ClipLoader size={20} color=\"#fff\" />\r\n              Processing...\r\n            </>\r\n          ) : (\r\n            \"Predict\"\r\n          )}\r\n        </button>\r\n\r\n        <button\r\n          onClick={clearCanvas}\r\n          className={`${commonButtonClasses} bg-gray-500 hover:bg-gray-600 focus:ring-gray-300`}\r\n          aria-label=\"Clear the drawing canvas\"\r\n          disabled={processing || !canvasReady}\r\n        >\r\n          Clear\r\n        </button>\r\n      </div>\r\n\r\n      {predictionCount > 0 && (\r\n        <p className=\"text-blue-700 font-medium\">\r\n          ✨ Predictions made: <span className=\"font-bold\">{predictionCount}</span>\r\n        </p>\r\n      )}\r\n\r\n      {floatingDigit && (\r\n        <div\r\n          className={`absolute text-5xl font-bold select-none pointer-events-none \r\n            ${floatingDigit.isCorrect ? \"text-pink-300 animate-float-up\" : \"text-red-400 animate-float-down\"} \r\n            left-1/2 transform -translate-x-1/2 top-1/2`}\r\n          style={{ zIndex: 50 }}\r\n        >\r\n          {floatingDigit.digit}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CanvasDrawing;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}