{"ast":null,"code":"// ✅ frontend/src/agents/tracking_agent/session_logger.js\n\nconst STORAGE_KEY = \"attempts\";\n\n/**\r\n * Logs a single drawing attempt into localStorage.\r\n * Each attempt contains:\r\n * - targetDigit\r\n * - predictedDigit\r\n * - correct\r\n * - feedbackText\r\n * - timestamp\r\n * - patientName\r\n */\nexport function logAttempt(metricsObj) {\n  const existing = JSON.parse(localStorage.getItem(STORAGE_KEY) || \"[]\");\n  existing.push(metricsObj);\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(existing));\n}\n\n/**\r\n * Retrieves all stored drawing attempts from localStorage.\r\n */\nexport function getAllAttempts() {\n  return JSON.parse(localStorage.getItem(STORAGE_KEY) || \"[]\");\n}\n\n/**\r\n * Clears all stored attempts from localStorage.\r\n */\nexport function clearAttempts() {\n  localStorage.removeItem(STORAGE_KEY);\n}\nexport function saveSessionResult(patientName, sessionData) {\n  const allData = JSON.parse(localStorage.getItem(\"sessions\") || \"{}\");\n  if (!allData[patientName]) allData[patientName] = [];\n  allData[patientName].push(sessionData);\n  localStorage.setItem(\"sessions\", JSON.stringify(allData));\n}\nexport function getAllSessions(patientName) {\n  const allData = JSON.parse(localStorage.getItem(\"sessions\") || \"{}\");\n  return allData[patientName] || [];\n}","map":{"version":3,"names":["STORAGE_KEY","logAttempt","metricsObj","existing","JSON","parse","localStorage","getItem","push","setItem","stringify","getAllAttempts","clearAttempts","removeItem","saveSessionResult","patientName","sessionData","allData","getAllSessions"],"sources":["C:/Users/DELL/Desktop/HandwritingTherapyApp/frontend/src/agents/tracking_agent/session_logger.js"],"sourcesContent":["// ✅ frontend/src/agents/tracking_agent/session_logger.js\r\n\r\nconst STORAGE_KEY = \"attempts\";\r\n\r\n/**\r\n * Logs a single drawing attempt into localStorage.\r\n * Each attempt contains:\r\n * - targetDigit\r\n * - predictedDigit\r\n * - correct\r\n * - feedbackText\r\n * - timestamp\r\n * - patientName\r\n */\r\nexport function logAttempt(metricsObj) {\r\n  const existing = JSON.parse(localStorage.getItem(STORAGE_KEY) || \"[]\");\r\n  existing.push(metricsObj);\r\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(existing));\r\n}\r\n\r\n/**\r\n * Retrieves all stored drawing attempts from localStorage.\r\n */\r\nexport function getAllAttempts() {\r\n  return JSON.parse(localStorage.getItem(STORAGE_KEY) || \"[]\");\r\n}\r\n\r\n/**\r\n * Clears all stored attempts from localStorage.\r\n */\r\nexport function clearAttempts() {\r\n  localStorage.removeItem(STORAGE_KEY);\r\n}\r\n\r\nexport function saveSessionResult(patientName, sessionData) {\r\n  const allData = JSON.parse(localStorage.getItem(\"sessions\") || \"{}\");\r\n  if (!allData[patientName]) allData[patientName] = [];\r\n  allData[patientName].push(sessionData);\r\n  localStorage.setItem(\"sessions\", JSON.stringify(allData));\r\n}\r\n\r\nexport function getAllSessions(patientName) {\r\n  const allData = JSON.parse(localStorage.getItem(\"sessions\") || \"{}\");\r\n  return allData[patientName] || [];\r\n}\r\n\r\n"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAG,UAAU;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAACC,UAAU,EAAE;EACrC,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACP,WAAW,CAAC,IAAI,IAAI,CAAC;EACtEG,QAAQ,CAACK,IAAI,CAACN,UAAU,CAAC;EACzBI,YAAY,CAACG,OAAO,CAACT,WAAW,EAAEI,IAAI,CAACM,SAAS,CAACP,QAAQ,CAAC,CAAC;AAC7D;;AAEA;AACA;AACA;AACA,OAAO,SAASQ,cAAcA,CAAA,EAAG;EAC/B,OAAOP,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACP,WAAW,CAAC,IAAI,IAAI,CAAC;AAC9D;;AAEA;AACA;AACA;AACA,OAAO,SAASY,aAAaA,CAAA,EAAG;EAC9BN,YAAY,CAACO,UAAU,CAACb,WAAW,CAAC;AACtC;AAEA,OAAO,SAASc,iBAAiBA,CAACC,WAAW,EAAEC,WAAW,EAAE;EAC1D,MAAMC,OAAO,GAAGb,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;EACpE,IAAI,CAACU,OAAO,CAACF,WAAW,CAAC,EAAEE,OAAO,CAACF,WAAW,CAAC,GAAG,EAAE;EACpDE,OAAO,CAACF,WAAW,CAAC,CAACP,IAAI,CAACQ,WAAW,CAAC;EACtCV,YAAY,CAACG,OAAO,CAAC,UAAU,EAAEL,IAAI,CAACM,SAAS,CAACO,OAAO,CAAC,CAAC;AAC3D;AAEA,OAAO,SAASC,cAAcA,CAACH,WAAW,EAAE;EAC1C,MAAME,OAAO,GAAGb,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;EACpE,OAAOU,OAAO,CAACF,WAAW,CAAC,IAAI,EAAE;AACnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}