{"ast":null,"code":"import { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\n\n// ðŸ“„ Full professional report\nexport async function generatePDFReportFull({\n  attempts = [],\n  metrics = {},\n  digitAccuracy = 0,\n  fatigueInfo = {},\n  patientName = \"Anonymous\",\n  sessionId = null,\n  language = \"en\",\n  autoSave = false\n} = {}) {\n  try {\n    const doc = new jsPDF();\n    const timestamp = new Date().toISOString().replace(\"T\", \" \").slice(0, 19);\n    doc.setFont(\"Helvetica\", \"bold\");\n    doc.setFontSize(18);\n    doc.text(\"HANDWRITING THERAPY SESSION REPORT\", doc.internal.pageSize.getWidth() / 2, 20, {\n      align: \"center\"\n    });\n    doc.setFont(\"Helvetica\", \"normal\");\n    doc.setFontSize(10);\n    doc.text(`Generated on: ${timestamp}`, doc.internal.pageSize.getWidth() / 2, 26, {\n      align: \"center\"\n    });\n    doc.line(20, 30, 190, 30);\n    doc.setFontSize(12);\n    doc.text(\"Patient Information\", 20, 40);\n    doc.setFontSize(11);\n    doc.text(`Name: ${patientName}`, 25, 48);\n    doc.text(`Language Mode: ${language}`, 25, 56);\n    if (sessionId) doc.text(`Session ID: ${sessionId}`, 25, 64);\n    const tableRows = attempts.map(entry => {\n      var _entry$targetDigit, _entry$predictedDigit;\n      return [(_entry$targetDigit = entry.targetDigit) !== null && _entry$targetDigit !== void 0 ? _entry$targetDigit : \"N/A\", (_entry$predictedDigit = entry.predictedDigit) !== null && _entry$predictedDigit !== void 0 ? _entry$predictedDigit : \"N/A\", (entry.confidence || 0).toFixed(2), new Date(entry.timestamp).toLocaleTimeString(), (entry.speed || 0).toFixed(2) + \"s\", entry.correct ? \"âœ“\" : \"âœ—\", entry.feedbackText || (entry.correct ? \"Well done.\" : \"Retry needed.\")];\n    });\n    autoTable(doc, {\n      startY: 75,\n      head: [[\"Expected\", \"Predicted\", \"Confidence\", \"Time\", \"Speed\", \"Result\", \"Remarks\"]],\n      body: tableRows,\n      theme: \"grid\",\n      styles: {\n        fontSize: 9\n      }\n    });\n    const summaryY = doc.lastAutoTable.finalY + 10;\n    const correct = attempts.filter(a => a.correct).length;\n    const incorrect = attempts.length - correct;\n    doc.setFontSize(12);\n    doc.text(\"Therapist Summary\", 20, summaryY);\n    doc.setFontSize(10);\n    doc.text(`Correct Digits: ${correct}`, 25, summaryY + 8);\n    doc.text(`Incorrect Digits: ${incorrect}`, 25, summaryY + 16);\n    doc.text(`Accuracy: ${(digitAccuracy * 100).toFixed(2)}%`, 25, summaryY + 24);\n    doc.text(`Average Speed: ${(metrics.avgSpeed || 0).toFixed(2)} px/sec`, 25, summaryY + 32);\n    doc.text(`Stroke Variance: ${(metrics.speedVariance || 0).toFixed(2)}`, 25, summaryY + 40);\n    doc.text(`Fatigue Detected: ${fatigueInfo.detected ? \"Yes\" : \"No\"}`, 25, summaryY + 48);\n    if (fatigueInfo.reason) doc.text(`Fatigue Reason: ${fatigueInfo.reason}`, 25, summaryY + 56);\n    doc.setFontSize(9);\n    doc.text(\"This report reflects a session using AI-based handwriting therapy tools. Always consult your physician for professional evaluation.\", 20, doc.internal.pageSize.getHeight() - 25);\n    doc.setFontSize(8);\n    doc.text(\"Page 1\", doc.internal.pageSize.getWidth() / 2, doc.internal.pageSize.getHeight() - 10, {\n      align: \"center\"\n    });\n    const blob = doc.output(\"blob\");\n    if (autoSave) {\n      doc.save(`therapy_report_${patientName}_${Date.now()}.pdf`);\n    }\n    return blob;\n  } catch (error) {\n    console.error(\"ðŸ›‘ Error generating enhanced PDF report:\", error);\n    throw error;\n  }\n}\n\n// ðŸ§¾ JSON Report\nexport function generateJSONReport(metrics, fatigueInfo) {\n  const sessionSummary = {\n    generatedAt: new Date().toISOString(),\n    metrics,\n    fatigueInfo\n  };\n  return new Blob([JSON.stringify(sessionSummary, null, 2)], {\n    type: \"application/json\"\n  });\n}","map":{"version":3,"names":["jsPDF","autoTable","generatePDFReportFull","attempts","metrics","digitAccuracy","fatigueInfo","patientName","sessionId","language","autoSave","doc","timestamp","Date","toISOString","replace","slice","setFont","setFontSize","text","internal","pageSize","getWidth","align","line","tableRows","map","entry","_entry$targetDigit","_entry$predictedDigit","targetDigit","predictedDigit","confidence","toFixed","toLocaleTimeString","speed","correct","feedbackText","startY","head","body","theme","styles","fontSize","summaryY","lastAutoTable","finalY","filter","a","length","incorrect","avgSpeed","speedVariance","detected","reason","getHeight","blob","output","save","now","error","console","generateJSONReport","sessionSummary","generatedAt","Blob","JSON","stringify","type"],"sources":["C:/Users/DELL/Desktop/HandwritingTherapyApp/frontend/src/agents/tracking_agent/report_generator.js"],"sourcesContent":["import { jsPDF } from \"jspdf\";\r\nimport autoTable from \"jspdf-autotable\";\r\n\r\n// ðŸ“„ Full professional report\r\nexport async function generatePDFReportFull({\r\n  attempts = [],\r\n  metrics = {},\r\n  digitAccuracy = 0,\r\n  fatigueInfo = {},\r\n  patientName = \"Anonymous\",\r\n  sessionId = null,\r\n  language = \"en\",\r\n  autoSave = false\r\n} = {}) {\r\n  try {\r\n    const doc = new jsPDF();\r\n    const timestamp = new Date().toISOString().replace(\"T\", \" \").slice(0, 19);\r\n\r\n    doc.setFont(\"Helvetica\", \"bold\");\r\n    doc.setFontSize(18);\r\n    doc.text(\"HANDWRITING THERAPY SESSION REPORT\", doc.internal.pageSize.getWidth() / 2, 20, { align: \"center\" });\r\n\r\n    doc.setFont(\"Helvetica\", \"normal\");\r\n    doc.setFontSize(10);\r\n    doc.text(`Generated on: ${timestamp}`, doc.internal.pageSize.getWidth() / 2, 26, { align: \"center\" });\r\n\r\n    doc.line(20, 30, 190, 30);\r\n\r\n    doc.setFontSize(12);\r\n    doc.text(\"Patient Information\", 20, 40);\r\n    doc.setFontSize(11);\r\n    doc.text(`Name: ${patientName}`, 25, 48);\r\n    doc.text(`Language Mode: ${language}`, 25, 56);\r\n    if (sessionId) doc.text(`Session ID: ${sessionId}`, 25, 64);\r\n\r\n    const tableRows = attempts.map(entry => [\r\n      entry.targetDigit ?? \"N/A\",\r\n      entry.predictedDigit ?? \"N/A\",\r\n      (entry.confidence || 0).toFixed(2),\r\n      new Date(entry.timestamp).toLocaleTimeString(),\r\n      (entry.speed || 0).toFixed(2) + \"s\",\r\n      entry.correct ? \"âœ“\" : \"âœ—\",\r\n      entry.feedbackText || (entry.correct ? \"Well done.\" : \"Retry needed.\")\r\n    ]);\r\n\r\n    autoTable(doc, {\r\n      startY: 75,\r\n      head: [[\"Expected\", \"Predicted\", \"Confidence\", \"Time\", \"Speed\", \"Result\", \"Remarks\"]],\r\n      body: tableRows,\r\n      theme: \"grid\",\r\n      styles: { fontSize: 9 },\r\n    });\r\n\r\n    const summaryY = doc.lastAutoTable.finalY + 10;\r\n    const correct = attempts.filter(a => a.correct).length;\r\n    const incorrect = attempts.length - correct;\r\n\r\n    doc.setFontSize(12);\r\n    doc.text(\"Therapist Summary\", 20, summaryY);\r\n    doc.setFontSize(10);\r\n    doc.text(`Correct Digits: ${correct}`, 25, summaryY + 8);\r\n    doc.text(`Incorrect Digits: ${incorrect}`, 25, summaryY + 16);\r\n    doc.text(`Accuracy: ${(digitAccuracy * 100).toFixed(2)}%`, 25, summaryY + 24);\r\n    doc.text(`Average Speed: ${(metrics.avgSpeed || 0).toFixed(2)} px/sec`, 25, summaryY + 32);\r\n    doc.text(`Stroke Variance: ${(metrics.speedVariance || 0).toFixed(2)}`, 25, summaryY + 40);\r\n    doc.text(`Fatigue Detected: ${fatigueInfo.detected ? \"Yes\" : \"No\"}`, 25, summaryY + 48);\r\n    if (fatigueInfo.reason) doc.text(`Fatigue Reason: ${fatigueInfo.reason}`, 25, summaryY + 56);\r\n\r\n    doc.setFontSize(9);\r\n    doc.text(\r\n      \"This report reflects a session using AI-based handwriting therapy tools. Always consult your physician for professional evaluation.\",\r\n      20,\r\n      doc.internal.pageSize.getHeight() - 25\r\n    );\r\n\r\n    doc.setFontSize(8);\r\n    doc.text(\"Page 1\", doc.internal.pageSize.getWidth() / 2, doc.internal.pageSize.getHeight() - 10, { align: \"center\" });\r\n\r\n    const blob = doc.output(\"blob\");\r\n\r\n    if (autoSave) {\r\n      doc.save(`therapy_report_${patientName}_${Date.now()}.pdf`);\r\n    }\r\n\r\n    return blob;\r\n  } catch (error) {\r\n    console.error(\"ðŸ›‘ Error generating enhanced PDF report:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// ðŸ§¾ JSON Report\r\nexport function generateJSONReport(metrics, fatigueInfo) {\r\n  const sessionSummary = {\r\n    generatedAt: new Date().toISOString(),\r\n    metrics,\r\n    fatigueInfo,\r\n  };\r\n\r\n  return new Blob([JSON.stringify(sessionSummary, null, 2)], {\r\n    type: \"application/json\"\r\n  });\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}