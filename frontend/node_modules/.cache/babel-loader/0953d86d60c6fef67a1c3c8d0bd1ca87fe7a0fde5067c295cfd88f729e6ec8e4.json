{"ast":null,"code":"// agents/cnnAgent.js\nimport * as tf from '@tensorflow/tfjs';\nlet model = null;\nlet currentLanguage = null;\nexport async function loadModel(lang = \"en\") {\n  if (model && currentLanguage === lang) return model;\n  const path = lang === \"ar\" ? \"/models/arabic_model/model.json\" : \"/models/Final_PreluModel/model.json\";\n  try {\n    model = await tf.loadLayersModel(path);\n    currentLanguage = lang;\n    console.log(`✅ ${lang.toUpperCase()} model loaded.`);\n  } catch (error) {\n    console.error(`❌ Failed to load ${lang} model:`, error);\n    throw error;\n  }\n  return model;\n}\nexport async function predictDigit(dataURL, lang = \"en\") {\n  await loadModel(lang);\n  const {\n    tensor,\n    debugCanvas\n  } = await preprocessDrawing(dataURL, lang === \"en\");\n  const prediction = model.predict(tensor);\n  const predictionArray = await prediction.array();\n  const predictedDigit = predictionArray[0].indexOf(Math.max(...predictionArray[0]));\n  return {\n    predictedDigit,\n    debugCanvas\n  };\n}\nexport async function preprocessDrawing(dataURL, invert = true) {\n  const tempCanvas = document.createElement(\"canvas\");\n  tempCanvas.width = 28;\n  tempCanvas.height = 28;\n  const ctx = tempCanvas.getContext(\"2d\");\n  const img = new Image();\n  img.src = dataURL;\n  await new Promise(res => img.onload = res);\n  ctx.drawImage(img, 0, 0, 28, 28);\n\n  // Declare outside tidy to avoid being disposed\n  let tensor, normalized, expanded;\n  tf.tidy(() => {\n    tensor = tf.browser.fromPixels(tempCanvas, 1).toFloat();\n    if (invert) tensor = tf.sub(255, tensor);\n    normalized = tensor.div(255.0);\n    expanded = normalized.expandDims(0);\n  });\n  const debugCanvas = document.createElement(\"canvas\");\n  debugCanvas.width = 28;\n  debugCanvas.height = 28;\n  await tf.browser.toPixels(normalized.squeeze(), debugCanvas); // ✅ outside tf.tidy\n\n  return {\n    tensor: expanded,\n    debugCanvas\n  };\n}","map":{"version":3,"names":["tf","model","currentLanguage","loadModel","lang","path","loadLayersModel","console","log","toUpperCase","error","predictDigit","dataURL","tensor","debugCanvas","preprocessDrawing","prediction","predict","predictionArray","array","predictedDigit","indexOf","Math","max","invert","tempCanvas","document","createElement","width","height","ctx","getContext","img","Image","src","Promise","res","onload","drawImage","normalized","expanded","tidy","browser","fromPixels","toFloat","sub","div","expandDims","toPixels","squeeze"],"sources":["C:/Users/DELL/Desktop/HandwritingTherapyApp/frontend/src/agents/cnnAgent.js"],"sourcesContent":["// agents/cnnAgent.js\r\nimport * as tf from '@tensorflow/tfjs';\r\n\r\nlet model = null;\r\nlet currentLanguage = null;\r\n\r\nexport async function loadModel(lang = \"en\") {\r\n  if (model && currentLanguage === lang) return model;\r\n\r\n  const path = lang === \"ar\"\r\n    ? \"/models/arabic_model/model.json\"\r\n    : \"/models/Final_PreluModel/model.json\";\r\n\r\n  try {\r\n    model = await tf.loadLayersModel(path);\r\n    currentLanguage = lang;\r\n    console.log(`✅ ${lang.toUpperCase()} model loaded.`);\r\n  } catch (error) {\r\n    console.error(`❌ Failed to load ${lang} model:`, error);\r\n    throw error;\r\n  }\r\n\r\n  return model;\r\n}\r\n\r\nexport async function predictDigit(dataURL, lang = \"en\") {\r\n  await loadModel(lang);\r\n\r\n  const { tensor, debugCanvas } = await preprocessDrawing(dataURL, lang === \"en\");\r\n  const prediction = model.predict(tensor);\r\n  const predictionArray = await prediction.array();\r\n  const predictedDigit = predictionArray[0].indexOf(Math.max(...predictionArray[0]));\r\n\r\n  return { predictedDigit, debugCanvas };\r\n}\r\n\r\nexport async function preprocessDrawing(dataURL, invert = true) {\r\n  const tempCanvas = document.createElement(\"canvas\");\r\n  tempCanvas.width = 28;\r\n  tempCanvas.height = 28;\r\n\r\n  const ctx = tempCanvas.getContext(\"2d\");\r\n\r\n  const img = new Image();\r\n  img.src = dataURL;\r\n  await new Promise((res) => (img.onload = res));\r\n  ctx.drawImage(img, 0, 0, 28, 28);\r\n\r\n  // Declare outside tidy to avoid being disposed\r\n  let tensor, normalized, expanded;\r\n\r\n  tf.tidy(() => {\r\n    tensor = tf.browser.fromPixels(tempCanvas, 1).toFloat();\r\n    if (invert) tensor = tf.sub(255, tensor);\r\n    normalized = tensor.div(255.0);\r\n    expanded = normalized.expandDims(0);\r\n  });\r\n\r\n  const debugCanvas = document.createElement(\"canvas\");\r\n  debugCanvas.width = 28;\r\n  debugCanvas.height = 28;\r\n  await tf.browser.toPixels(normalized.squeeze(), debugCanvas); // ✅ outside tf.tidy\r\n\r\n  return { tensor: expanded, debugCanvas };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}