{"ast":null,"code":"// agents/tracking_agent/stroke_listener.js\n\nlet strokeCallback = null;\nlet canvasElement = null;\nexport function startListening(canvas, callback) {\n  strokeCallback = callback;\n  canvasElement = canvas;\n  canvasElement.addEventListener('pointermove', captureStroke);\n}\nexport function stopListening() {\n  if (canvasElement) {\n    canvasElement.removeEventListener('pointermove', captureStroke);\n  }\n  strokeCallback = null;\n  canvasElement = null;\n}\nlet lastCaptureTime = 0;\nfunction captureStroke(event) {\n  var _event$pressure;\n  if (!strokeCallback) return;\n\n  // Only capture stylus or finger input\n  if (event.pointerType !== \"pen\" && event.pointerType !== \"touch\") return;\n  const now = Date.now();\n\n  // Throttle: capture only every 20ms\n  if (now - lastCaptureTime < 20) return;\n  lastCaptureTime = now;\n  strokeCallback({\n    x: event.offsetX,\n    y: event.offsetY,\n    timestamp: now,\n    pressure: (_event$pressure = event.pressure) !== null && _event$pressure !== void 0 ? _event$pressure : 0.5 // Default if no pressure\n  });\n}","map":{"version":3,"names":["strokeCallback","canvasElement","startListening","canvas","callback","addEventListener","captureStroke","stopListening","removeEventListener","lastCaptureTime","event","_event$pressure","pointerType","now","Date","x","offsetX","y","offsetY","timestamp","pressure"],"sources":["C:/Users/DELL/Desktop/HandwritingTherapyApp/frontend/src/agents/tracking_agent/stroke_listener.js"],"sourcesContent":["// agents/tracking_agent/stroke_listener.js\r\n\r\nlet strokeCallback = null;\r\nlet canvasElement = null;\r\n\r\nexport function startListening(canvas, callback) {\r\n    strokeCallback = callback;\r\n    canvasElement = canvas;\r\n\r\n    canvasElement.addEventListener('pointermove', captureStroke);\r\n}\r\n\r\nexport function stopListening() {\r\n    if (canvasElement) {\r\n        canvasElement.removeEventListener('pointermove', captureStroke);\r\n    }\r\n    strokeCallback = null;\r\n    canvasElement = null;\r\n}\r\n\r\nlet lastCaptureTime = 0;\r\n\r\nfunction captureStroke(event) {\r\n    if (!strokeCallback) return;\r\n\r\n    // Only capture stylus or finger input\r\n    if (event.pointerType !== \"pen\" && event.pointerType !== \"touch\") return;\r\n\r\n    const now = Date.now();\r\n\r\n    // Throttle: capture only every 20ms\r\n    if (now - lastCaptureTime < 20) return;\r\n    lastCaptureTime = now;\r\n\r\n    strokeCallback({\r\n        x: event.offsetX,\r\n        y: event.offsetY,\r\n        timestamp: now,\r\n        pressure: event.pressure ?? 0.5, // Default if no pressure\r\n    });\r\n}\r\n"],"mappings":"AAAA;;AAEA,IAAIA,cAAc,GAAG,IAAI;AACzB,IAAIC,aAAa,GAAG,IAAI;AAExB,OAAO,SAASC,cAAcA,CAACC,MAAM,EAAEC,QAAQ,EAAE;EAC7CJ,cAAc,GAAGI,QAAQ;EACzBH,aAAa,GAAGE,MAAM;EAEtBF,aAAa,CAACI,gBAAgB,CAAC,aAAa,EAAEC,aAAa,CAAC;AAChE;AAEA,OAAO,SAASC,aAAaA,CAAA,EAAG;EAC5B,IAAIN,aAAa,EAAE;IACfA,aAAa,CAACO,mBAAmB,CAAC,aAAa,EAAEF,aAAa,CAAC;EACnE;EACAN,cAAc,GAAG,IAAI;EACrBC,aAAa,GAAG,IAAI;AACxB;AAEA,IAAIQ,eAAe,GAAG,CAAC;AAEvB,SAASH,aAAaA,CAACI,KAAK,EAAE;EAAA,IAAAC,eAAA;EAC1B,IAAI,CAACX,cAAc,EAAE;;EAErB;EACA,IAAIU,KAAK,CAACE,WAAW,KAAK,KAAK,IAAIF,KAAK,CAACE,WAAW,KAAK,OAAO,EAAE;EAElE,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC;;EAEtB;EACA,IAAIA,GAAG,GAAGJ,eAAe,GAAG,EAAE,EAAE;EAChCA,eAAe,GAAGI,GAAG;EAErBb,cAAc,CAAC;IACXe,CAAC,EAAEL,KAAK,CAACM,OAAO;IAChBC,CAAC,EAAEP,KAAK,CAACQ,OAAO;IAChBC,SAAS,EAAEN,GAAG;IACdO,QAAQ,GAAAT,eAAA,GAAED,KAAK,CAACU,QAAQ,cAAAT,eAAA,cAAAA,eAAA,GAAI,GAAG,CAAE;EACrC,CAAC,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}