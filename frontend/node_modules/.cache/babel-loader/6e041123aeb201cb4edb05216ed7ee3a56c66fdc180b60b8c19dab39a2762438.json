{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\HandwritingTherapyApp\\\\frontend\\\\src\\\\components\\\\ReplaySection.jsx\",\n  _s = $RefreshSig$();\n// --------- src/components/ReplaySection.jsx ---------\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { saveAs } from \"file-saver\";\nimport { generatePDFReport, generateJSONReport } from \"../agents/tracking_agent/report_generator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReplaySection({\n  attempts = [],\n  metrics,\n  fatigue,\n  patientName\n}) {\n  _s();\n  const [selectedReplay, setSelectedReplay] = useState(null);\n  const [replayCounts, setReplayCounts] = useState({});\n  const [groupedDigits, setGroupedDigits] = useState({});\n  const canvasRef = useRef(null);\n  const replay = strokes => {\n    const canvas = canvasRef.current;\n    if (!canvas || !strokes) return;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.strokeStyle = \"#4B5563\";\n    ctx.lineWidth = 4;\n    ctx.lineCap = \"round\";\n    let i = 0;\n    const drawStep = () => {\n      if (i >= strokes.length) return;\n      const {\n        x,\n        y,\n        type\n      } = strokes[i];\n      if (type === \"start\") {\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n      } else if (type === \"draw\") {\n        ctx.lineTo(x, y);\n        ctx.stroke();\n      } else if (type === \"end\") {\n        ctx.closePath();\n      }\n      i++;\n      setTimeout(drawStep, 20);\n    };\n    drawStep();\n  };\n  useEffect(() => {\n    if (selectedReplay) {\n      replay(selectedReplay.strokes);\n      setReplayCounts(prev => ({\n        ...prev,\n        [selectedReplay.timestamp]: (prev[selectedReplay.timestamp] || 0) + 1\n      }));\n    }\n  }, [selectedReplay]);\n  useEffect(() => {\n    const grouped = {};\n    attempts.forEach(attempt => {\n      const digit = attempt.targetDigit;\n      if (!grouped[digit]) grouped[digit] = [];\n      grouped[digit].push(attempt);\n    });\n    setGroupedDigits(grouped);\n  }, [attempts]);\n  const handleDownloadPDF = async () => {\n    if (!metrics || !fatigue) return alert(\"📊 Metrics not available!\");\n    const doc = await generatePDFReport(metrics, fatigue, {\n      autoSave: false,\n      patientName\n    });\n    doc.save(`therapy_session_${new Date().toISOString()}.pdf`);\n  };\n  const handleDownloadJSON = async () => {\n    if (!metrics || !fatigue) return alert(\"📊 Metrics not available!\");\n    const blob = await generateJSONReport(metrics, fatigue);\n    saveAs(blob, `therapy_session_${new Date().toISOString()}.json`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-10 bg-white/70 border border-gray-300 p-6 rounded-xl shadow-md backdrop-blur-sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold text-gray-700 mb-3\",\n      children: \"\\uD83C\\uDF3F Save or replay your attempts by digit:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), Object.keys(groupedDigits).map(digit => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-semibold text-blue-700 mb-2\",\n        children: [\"Digit \", digit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2\",\n        children: groupedDigits[digit].map((attempt, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedReplay(attempt),\n          className: `px-3 py-1 rounded-lg text-sm font-medium border shadow-sm transition ${selectedReplay === attempt ? \"bg-blue-500 text-white\" : \"bg-gray-100 hover:bg-gray-200\"}`,\n          children: [attempt.predictedDigit, \" \", attempt.correct ? \"✅\" : \"❌\", \" x\", replayCounts[attempt.timestamp] || 0]\n        }, attempt.timestamp + index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, digit, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)), selectedReplay && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-semibold text-blue-700 mb-2\",\n        children: [\"\\uD83D\\uDD01 Replaying digit: \", selectedReplay.targetDigit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 300,\n        height: 300,\n        className: \"border rounded bg-gray-100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-4 mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownloadPDF,\n        className: \"bg-blue-200 hover:bg-blue-300 text-blue-900 px-4 py-2 rounded-lg font-medium shadow\",\n        children: \"\\uD83D\\uDCC4 Download PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownloadJSON,\n        className: \"bg-yellow-200 hover:bg-yellow-300 text-yellow-900 px-4 py-2 rounded-lg font-medium shadow\",\n        children: \"\\uD83E\\uDDFE Download JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(ReplaySection, \"YleqjAQp4hKUPoGszqiUKzYeSAg=\");\n_c = ReplaySection;\nexport default ReplaySection;\nvar _c;\n$RefreshReg$(_c, \"ReplaySection\");","map":{"version":3,"names":["React","useEffect","useState","useRef","saveAs","generatePDFReport","generateJSONReport","jsxDEV","_jsxDEV","ReplaySection","attempts","metrics","fatigue","patientName","_s","selectedReplay","setSelectedReplay","replayCounts","setReplayCounts","groupedDigits","setGroupedDigits","canvasRef","replay","strokes","canvas","current","ctx","getContext","clearRect","width","height","strokeStyle","lineWidth","lineCap","i","drawStep","length","x","y","type","beginPath","moveTo","lineTo","stroke","closePath","setTimeout","prev","timestamp","grouped","forEach","attempt","digit","targetDigit","push","handleDownloadPDF","alert","doc","autoSave","save","Date","toISOString","handleDownloadJSON","blob","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","index","onClick","predictedDigit","correct","ref","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/HandwritingTherapyApp/frontend/src/components/ReplaySection.jsx"],"sourcesContent":["// --------- src/components/ReplaySection.jsx ---------\r\n\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { generatePDFReport, generateJSONReport } from \"../agents/tracking_agent/report_generator\";\r\n\r\nfunction ReplaySection({ attempts = [], metrics, fatigue, patientName }) {\r\n  const [selectedReplay, setSelectedReplay] = useState(null);\r\n  const [replayCounts, setReplayCounts] = useState({});\r\n  const [groupedDigits, setGroupedDigits] = useState({});\r\n  const canvasRef = useRef(null);\r\n\r\n  const replay = (strokes) => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas || !strokes) return;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    ctx.strokeStyle = \"#4B5563\";\r\n    ctx.lineWidth = 4;\r\n    ctx.lineCap = \"round\";\r\n\r\n    let i = 0;\r\n    const drawStep = () => {\r\n      if (i >= strokes.length) return;\r\n      const { x, y, type } = strokes[i];\r\n      if (type === \"start\") {\r\n        ctx.beginPath();\r\n        ctx.moveTo(x, y);\r\n      } else if (type === \"draw\") {\r\n        ctx.lineTo(x, y);\r\n        ctx.stroke();\r\n      } else if (type === \"end\") {\r\n        ctx.closePath();\r\n      }\r\n      i++;\r\n      setTimeout(drawStep, 20);\r\n    };\r\n    drawStep();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedReplay) {\r\n      replay(selectedReplay.strokes);\r\n      setReplayCounts(prev => ({\r\n        ...prev,\r\n        [selectedReplay.timestamp]: (prev[selectedReplay.timestamp] || 0) + 1\r\n      }));\r\n    }\r\n  }, [selectedReplay]);\r\n\r\n  useEffect(() => {\r\n    const grouped = {};\r\n    attempts.forEach(attempt => {\r\n      const digit = attempt.targetDigit;\r\n      if (!grouped[digit]) grouped[digit] = [];\r\n      grouped[digit].push(attempt);\r\n    });\r\n    setGroupedDigits(grouped);\r\n  }, [attempts]);\r\n\r\n  const handleDownloadPDF = async () => {\r\n    if (!metrics || !fatigue) return alert(\"📊 Metrics not available!\");\r\n    const doc = await generatePDFReport(metrics, fatigue, {\r\n      autoSave: false,\r\n      patientName,\r\n    });\r\n    doc.save(`therapy_session_${new Date().toISOString()}.pdf`);\r\n  };\r\n\r\n  const handleDownloadJSON = async () => {\r\n    if (!metrics || !fatigue) return alert(\"📊 Metrics not available!\");\r\n    const blob = await generateJSONReport(metrics, fatigue);\r\n    saveAs(blob, `therapy_session_${new Date().toISOString()}.json`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-10 bg-white/70 border border-gray-300 p-6 rounded-xl shadow-md backdrop-blur-sm\">\r\n      <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">\r\n        🌿 Save or replay your attempts by digit:\r\n      </h3>\r\n\r\n      {Object.keys(groupedDigits).map(digit => (\r\n        <div key={digit} className=\"mb-4\">\r\n          <h4 className=\"font-semibold text-blue-700 mb-2\">Digit {digit}</h4>\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {groupedDigits[digit].map((attempt, index) => (\r\n              <button\r\n                key={attempt.timestamp + index}\r\n                onClick={() => setSelectedReplay(attempt)}\r\n                className={`px-3 py-1 rounded-lg text-sm font-medium border shadow-sm transition ${\r\n                  selectedReplay === attempt\r\n                    ? \"bg-blue-500 text-white\"\r\n                    : \"bg-gray-100 hover:bg-gray-200\"\r\n                }`}\r\n              >\r\n                {attempt.predictedDigit} {attempt.correct ? \"✅\" : \"❌\"} x{replayCounts[attempt.timestamp] || 0}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      {selectedReplay && (\r\n        <div className=\"mb-6\">\r\n          <h4 className=\"font-semibold text-blue-700 mb-2\">\r\n            🔁 Replaying digit: {selectedReplay.targetDigit}\r\n          </h4>\r\n          <canvas\r\n            ref={canvasRef}\r\n            width={300}\r\n            height={300}\r\n            className=\"border rounded bg-gray-100\"\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"flex flex-wrap gap-4 mt-4\">\r\n        <button\r\n          onClick={handleDownloadPDF}\r\n          className=\"bg-blue-200 hover:bg-blue-300 text-blue-900 px-4 py-2 rounded-lg font-medium shadow\"\r\n        >\r\n          📄 Download PDF\r\n        </button>\r\n        <button\r\n          onClick={handleDownloadJSON}\r\n          className=\"bg-yellow-200 hover:bg-yellow-300 text-yellow-900 px-4 py-2 rounded-lg font-medium shadow\"\r\n        >\r\n          🧾 Download JSON\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReplaySection;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,MAAM,QAAQ,YAAY;AACnC,SAASC,iBAAiB,EAAEC,kBAAkB,QAAQ,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElG,SAASC,aAAaA,CAAC;EAAEC,QAAQ,GAAG,EAAE;EAAEC,OAAO;EAAEC,OAAO;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACvE,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAMmB,SAAS,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAMmB,MAAM,GAAIC,OAAO,IAAK;IAC1B,MAAMC,MAAM,GAAGH,SAAS,CAACI,OAAO;IAChC,IAAI,CAACD,MAAM,IAAI,CAACD,OAAO,EAAE;IACzB,MAAMG,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnCD,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEJ,MAAM,CAACK,KAAK,EAAEL,MAAM,CAACM,MAAM,CAAC;IAChDJ,GAAG,CAACK,WAAW,GAAG,SAAS;IAC3BL,GAAG,CAACM,SAAS,GAAG,CAAC;IACjBN,GAAG,CAACO,OAAO,GAAG,OAAO;IAErB,IAAIC,CAAC,GAAG,CAAC;IACT,MAAMC,QAAQ,GAAGA,CAAA,KAAM;MACrB,IAAID,CAAC,IAAIX,OAAO,CAACa,MAAM,EAAE;MACzB,MAAM;QAAEC,CAAC;QAAEC,CAAC;QAAEC;MAAK,CAAC,GAAGhB,OAAO,CAACW,CAAC,CAAC;MACjC,IAAIK,IAAI,KAAK,OAAO,EAAE;QACpBb,GAAG,CAACc,SAAS,CAAC,CAAC;QACfd,GAAG,CAACe,MAAM,CAACJ,CAAC,EAAEC,CAAC,CAAC;MAClB,CAAC,MAAM,IAAIC,IAAI,KAAK,MAAM,EAAE;QAC1Bb,GAAG,CAACgB,MAAM,CAACL,CAAC,EAAEC,CAAC,CAAC;QAChBZ,GAAG,CAACiB,MAAM,CAAC,CAAC;MACd,CAAC,MAAM,IAAIJ,IAAI,KAAK,KAAK,EAAE;QACzBb,GAAG,CAACkB,SAAS,CAAC,CAAC;MACjB;MACAV,CAAC,EAAE;MACHW,UAAU,CAACV,QAAQ,EAAE,EAAE,CAAC;IAC1B,CAAC;IACDA,QAAQ,CAAC,CAAC;EACZ,CAAC;EAEDlC,SAAS,CAAC,MAAM;IACd,IAAIc,cAAc,EAAE;MAClBO,MAAM,CAACP,cAAc,CAACQ,OAAO,CAAC;MAC9BL,eAAe,CAAC4B,IAAI,KAAK;QACvB,GAAGA,IAAI;QACP,CAAC/B,cAAc,CAACgC,SAAS,GAAG,CAACD,IAAI,CAAC/B,cAAc,CAACgC,SAAS,CAAC,IAAI,CAAC,IAAI;MACtE,CAAC,CAAC,CAAC;IACL;EACF,CAAC,EAAE,CAAChC,cAAc,CAAC,CAAC;EAEpBd,SAAS,CAAC,MAAM;IACd,MAAM+C,OAAO,GAAG,CAAC,CAAC;IAClBtC,QAAQ,CAACuC,OAAO,CAACC,OAAO,IAAI;MAC1B,MAAMC,KAAK,GAAGD,OAAO,CAACE,WAAW;MACjC,IAAI,CAACJ,OAAO,CAACG,KAAK,CAAC,EAAEH,OAAO,CAACG,KAAK,CAAC,GAAG,EAAE;MACxCH,OAAO,CAACG,KAAK,CAAC,CAACE,IAAI,CAACH,OAAO,CAAC;IAC9B,CAAC,CAAC;IACF9B,gBAAgB,CAAC4B,OAAO,CAAC;EAC3B,CAAC,EAAE,CAACtC,QAAQ,CAAC,CAAC;EAEd,MAAM4C,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAAC3C,OAAO,IAAI,CAACC,OAAO,EAAE,OAAO2C,KAAK,CAAC,2BAA2B,CAAC;IACnE,MAAMC,GAAG,GAAG,MAAMnD,iBAAiB,CAACM,OAAO,EAAEC,OAAO,EAAE;MACpD6C,QAAQ,EAAE,KAAK;MACf5C;IACF,CAAC,CAAC;IACF2C,GAAG,CAACE,IAAI,CAAC,mBAAmB,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,MAAM,CAAC;EAC7D,CAAC;EAED,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI,CAAClD,OAAO,IAAI,CAACC,OAAO,EAAE,OAAO2C,KAAK,CAAC,2BAA2B,CAAC;IACnE,MAAMO,IAAI,GAAG,MAAMxD,kBAAkB,CAACK,OAAO,EAAEC,OAAO,CAAC;IACvDR,MAAM,CAAC0D,IAAI,EAAE,mBAAmB,IAAIH,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,OAAO,CAAC;EAClE,CAAC;EAED,oBACEpD,OAAA;IAAKuD,SAAS,EAAC,oFAAoF;IAAAC,QAAA,gBACjGxD,OAAA;MAAIuD,SAAS,EAAC,0CAA0C;MAAAC,QAAA,EAAC;IAEzD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEJC,MAAM,CAACC,IAAI,CAACnD,aAAa,CAAC,CAACoD,GAAG,CAACpB,KAAK,iBACnC3C,OAAA;MAAiBuD,SAAS,EAAC,MAAM;MAAAC,QAAA,gBAC/BxD,OAAA;QAAIuD,SAAS,EAAC,kCAAkC;QAAAC,QAAA,GAAC,QAAM,EAACb,KAAK;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnE5D,OAAA;QAAKuD,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAClC7C,aAAa,CAACgC,KAAK,CAAC,CAACoB,GAAG,CAAC,CAACrB,OAAO,EAAEsB,KAAK,kBACvChE,OAAA;UAEEiE,OAAO,EAAEA,CAAA,KAAMzD,iBAAiB,CAACkC,OAAO,CAAE;UAC1Ca,SAAS,EAAE,wEACThD,cAAc,KAAKmC,OAAO,GACtB,wBAAwB,GACxB,+BAA+B,EAClC;UAAAc,QAAA,GAEFd,OAAO,CAACwB,cAAc,EAAC,GAAC,EAACxB,OAAO,CAACyB,OAAO,GAAG,GAAG,GAAG,GAAG,EAAC,IAAE,EAAC1D,YAAY,CAACiC,OAAO,CAACH,SAAS,CAAC,IAAI,CAAC;QAAA,GARxFG,OAAO,CAACH,SAAS,GAAGyB,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASxB,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA,GAhBEjB,KAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAiBV,CACN,CAAC,EAEDrD,cAAc,iBACbP,OAAA;MAAKuD,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBxD,OAAA;QAAIuD,SAAS,EAAC,kCAAkC;QAAAC,QAAA,GAAC,gCAC3B,EAACjD,cAAc,CAACqC,WAAW;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACL5D,OAAA;QACEoE,GAAG,EAAEvD,SAAU;QACfQ,KAAK,EAAE,GAAI;QACXC,MAAM,EAAE,GAAI;QACZiC,SAAS,EAAC;MAA4B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,eAED5D,OAAA;MAAKuD,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACxCxD,OAAA;QACEiE,OAAO,EAAEnB,iBAAkB;QAC3BS,SAAS,EAAC,qFAAqF;QAAAC,QAAA,EAChG;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT5D,OAAA;QACEiE,OAAO,EAAEZ,kBAAmB;QAC5BE,SAAS,EAAC,2FAA2F;QAAAC,QAAA,EACtG;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtD,EAAA,CA9HQL,aAAa;AAAAoE,EAAA,GAAbpE,aAAa;AAgItB,eAAeA,aAAa;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}