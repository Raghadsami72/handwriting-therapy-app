{"ast":null,"code":"/*import React, { useState } from \"react\";\r\nimport { generatePDFReport, generateJSONReport } from \"../agents/tracking_agent/report_generator\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nfunction ReplaySection({ attempts, mcp, metrics: parentMetrics, fatigue: parentFatigue, patientName }) {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleDownloadPDF = async () => {\r\n    if (!parentMetrics || !parentFatigue) {\r\n      alert(\"‚ö†Ô∏è Session summary not available yet.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    const doc = await generatePDFReport(parentMetrics, parentFatigue, {\r\n      autoSave: false,\r\n      patientName,\r\n      sessionId: `session_${Date.now()}`\r\n    });\r\n    saveAs(doc, `Report_${patientName}_${new Date().toISOString().slice(0, 10)}.pdf`);\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleDownloadJSON = async () => {\r\n    if (!parentMetrics || !parentFatigue) {\r\n      alert(\"‚ö†Ô∏è Session summary not available yet.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    const blob = await generateJSONReport(parentMetrics, parentFatigue);\r\n    saveAs(blob, `SessionData_${patientName}_${new Date().toISOString().slice(0, 10)}.json`);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow p-4 mt-6\">\r\n      <h2 className=\"text-lg font-bold mb-2 text-blue-800\">üìÅ Session Export</h2>\r\n      <p className=\"text-sm text-gray-600 mb-4\">\r\n        You can download the full session data as a PDF or JSON file for documentation and analysis.\r\n      </p>\r\n      <div className=\"flex flex-wrap gap-4\">\r\n        <button\r\n          onClick={handleDownloadPDF}\r\n          disabled={loading}\r\n          className=\"bg-blue-100 hover:bg-blue-200 text-blue-900 px-4 py-2 rounded-lg font-medium shadow\"\r\n        >üìÑ Download PDF</button>\r\n\r\n        <button\r\n          onClick={handleDownloadJSON}\r\n          disabled={loading}\r\n          className=\"bg-yellow-100 hover:bg-yellow-200 text-yellow-900 px-4 py-2 rounded-lg font-medium shadow\"\r\n        >üßæ Download JSON</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReplaySection;*/","map":{"version":3,"names":[],"sources":["C:/Users/DELL/Desktop/HandwritingTherapyApp/frontend/src/components/ReplaySection.jsx"],"sourcesContent":["/*import React, { useState } from \"react\";\r\nimport { generatePDFReport, generateJSONReport } from \"../agents/tracking_agent/report_generator\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nfunction ReplaySection({ attempts, mcp, metrics: parentMetrics, fatigue: parentFatigue, patientName }) {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleDownloadPDF = async () => {\r\n    if (!parentMetrics || !parentFatigue) {\r\n      alert(\"‚ö†Ô∏è Session summary not available yet.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    const doc = await generatePDFReport(parentMetrics, parentFatigue, {\r\n      autoSave: false,\r\n      patientName,\r\n      sessionId: `session_${Date.now()}`\r\n    });\r\n    saveAs(doc, `Report_${patientName}_${new Date().toISOString().slice(0, 10)}.pdf`);\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleDownloadJSON = async () => {\r\n    if (!parentMetrics || !parentFatigue) {\r\n      alert(\"‚ö†Ô∏è Session summary not available yet.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    const blob = await generateJSONReport(parentMetrics, parentFatigue);\r\n    saveAs(blob, `SessionData_${patientName}_${new Date().toISOString().slice(0, 10)}.json`);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow p-4 mt-6\">\r\n      <h2 className=\"text-lg font-bold mb-2 text-blue-800\">üìÅ Session Export</h2>\r\n      <p className=\"text-sm text-gray-600 mb-4\">\r\n        You can download the full session data as a PDF or JSON file for documentation and analysis.\r\n      </p>\r\n      <div className=\"flex flex-wrap gap-4\">\r\n        <button\r\n          onClick={handleDownloadPDF}\r\n          disabled={loading}\r\n          className=\"bg-blue-100 hover:bg-blue-200 text-blue-900 px-4 py-2 rounded-lg font-medium shadow\"\r\n        >üìÑ Download PDF</button>\r\n\r\n        <button\r\n          onClick={handleDownloadJSON}\r\n          disabled={loading}\r\n          className=\"bg-yellow-100 hover:bg-yellow-200 text-yellow-900 px-4 py-2 rounded-lg font-medium shadow\"\r\n        >üßæ Download JSON</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReplaySection;*/\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}