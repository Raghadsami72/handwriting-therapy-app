{"ast":null,"code":"// agents/cnnAgent.js\nimport * as tf from '@tensorflow/tfjs';\nlet model = null;\nlet currentLanguage = null;\nexport async function loadModel(lang = \"en\") {\n  if (model && currentLanguage === lang) return model;\n  const path = lang === \"ar\" ? \"/models/model_tfjs_hala/model_tfjs/model.json\" : \"/models/ENGLISH/model.json\";\n  try {\n    model = await tf.loadLayersModel(path);\n    currentLanguage = lang;\n    console.log(`‚úÖ ${lang.toUpperCase()} model loaded.`);\n  } catch (error) {\n    console.error(`‚ùå Failed to load ${lang} model:`, error);\n    throw error;\n  }\n  return model;\n}\nexport async function predictDigit(dataURL, lang = \"en\", profile = null, archiveArray = null, patientName = \"Anonymous\") {\n  await loadModel(lang);\n  const {\n    tensor,\n    debugCanvas\n  } = await preprocessDrawing(dataURL, profile, true);\n  const prediction = model.predict(tensor);\n  const predictionArray = await prediction.array();\n  const predictedDigit = predictionArray[0].indexOf(Math.max(...predictionArray[0]));\n  const confidence = Math.max(...predictionArray[0]);\n  if (confidence < 0.6 && profile !== \"standard\") {\n    console.warn(\"‚ö†Ô∏è Low confidence. Consider fallback to less aggressive preprocessing.\");\n  }\n  if (archiveArray && debugCanvas) {\n    const blob = await new Promise(res => debugCanvas.toBlob(res, \"image/png\"));\n    const timestamp = Date.now();\n    console.log(\"üß™ Preprocessed image (debug view):\", debugCanvas.toDataURL(\"image/png\"));\n    archiveArray.push({\n      name: `digit_${predictedDigit}_${timestamp}.png`,\n      blob\n    });\n    const text = `Prediction: ${predictedDigit}\\nTimestamp: ${timestamp}\\nPatient: ${patientName}`;\n    const metaBlob = new Blob([text], {\n      type: \"text/plain\"\n    });\n    archiveArray.push({\n      name: `digit_${predictedDigit}_${timestamp}.txt`,\n      blob: metaBlob\n    });\n  }\n  return predictedDigit;\n}\nexport async function preprocessDrawing(dataURL, profile = null, includeCanvas = false) {\n  const image = new Image();\n  image.src = dataURL;\n  await new Promise(res => image.onload = res);\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = image.width;\n  canvas.height = image.height;\n  const ctx = canvas.getContext(\"2d\");\n  ctx.drawImage(image, 0, 0);\n  return await preprocessCanvas(canvas, profile, includeCanvas);\n}\nexport async function preprocessCanvas(canvas, profile = null, includeCanvas = false) {\n  const resized = document.createElement(\"canvas\");\n  resized.width = 28;\n  resized.height = 28;\n  const resizedCtx = resized.getContext(\"2d\");\n  resizedCtx.drawImage(canvas, 0, 0, 28, 28);\n  const imgData = resizedCtx.getImageData(0, 0, 28, 28);\n  const data = imgData.data;\n  const gray = [];\n  for (let i = 0; i < data.length; i += 4) {\n    const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n    gray.push(1.0 - avg / 255);\n  }\n  let tensor = tf.tensor2d(gray, [28, 28]);\n  const pixelSum = tensor.sum().dataSync()[0];\n  const binary = tensor.greater(tf.scalar(0.15)).toFloat();\n  const activePixels = binary.sum().dataSync()[0];\n  const isVerySmall = activePixels < 60 || pixelSum < 25;\n  if (!profile) {\n    profile = detectProfile(pixelSum, activePixels);\n    console.log(\"üß† Auto-selected profile:\", profile);\n  }\n  tensor = centerImage(tensor);\n  if (profile === \"standard\") {\n    // Keep grayscale detail, no blur or binarization\n    console.log(\"üéØ Standard profile: Keeping raw grayscale\");\n  } else {\n    const smoothLevel = activePixels < 80 ? \"strong\" : \"light\";\n    tensor = gaussianSmooth(tensor, smoothLevel);\n    if (!isVerySmall && tensor.sum().dataSync()[0] < 30) {\n      tensor = dilate(tensor);\n    }\n    tensor = binarize(tensor, 0.25);\n  }\n  const input = tensor.reshape([1, 28, 28, 1]);\n  let debugCanvas = null;\n  if (includeCanvas) {\n    debugCanvas = document.createElement(\"canvas\");\n    debugCanvas.width = 28;\n    debugCanvas.height = 28;\n    await tf.browser.toPixels(tensor, debugCanvas);\n  }\n  return {\n    tensor: input,\n    debugCanvas\n  };\n}\nfunction centerImage(tensor) {\n  const sum = tensor.sum().arraySync();\n  if (sum === 0) return tensor;\n  const arr = tensor.arraySync();\n  let cx = 0,\n    cy = 0;\n  for (let y = 0; y < 28; y++) {\n    for (let x = 0; x < 28; x++) {\n      const val = arr[y][x];\n      cx += x * val;\n      cy += y * val;\n    }\n  }\n  cx /= sum;\n  cy /= sum;\n  const shiftX = Math.round(14 - cx);\n  const shiftY = Math.round(14 - cy);\n  const padded = tf.pad(tensor, [[1, 1], [1, 1]], 0);\n  const begin = [1 - shiftY, 1 - shiftX];\n  const size = [28, 28];\n  const safeBegin = begin.map(v => Math.max(0, Math.min(2, v)));\n  return tf.slice(padded, safeBegin, size);\n}\nfunction gaussianSmooth(tensor, level = \"strong\") {\n  let kernelArray;\n  if (level === \"light\") {\n    kernelArray = [[0, 1, 0], [1, 4, 1], [0, 1, 0]];\n  } else {\n    kernelArray = [[1, 2, 1], [2, 4, 2], [1, 2, 1]];\n  }\n  const kernel = tf.tensor4d(kernelArray.map(row => row.map(val => [[val]])), [3, 3, 1, 1]).div(level === \"light\" ? 8 : 16);\n  return tf.conv2d(tensor.reshape([1, 28, 28, 1]), kernel, 1, 'same').reshape([28, 28]);\n}\nfunction dilate(tensor) {\n  return tf.maxPool(tensor.reshape([1, 28, 28, 1]), [3, 3], [1, 1], 'same').reshape([28, 28]);\n}\nfunction binarize(tensor, threshold = 0.25) {\n  return tensor.greater(tf.scalar(threshold)).toFloat();\n}\nfunction detectProfile(pixelSum, activePixels) {\n  const isFaint = pixelSum < 40;\n  const isSmall = activePixels < 120;\n  const isThin = activePixels < 80 && pixelSum / activePixels < 0.5;\n  if (isFaint || isSmall || isThin) return \"parkinson-enhanced\";\n  return \"standard\";\n}","map":{"version":3,"names":["tf","model","currentLanguage","loadModel","lang","path","loadLayersModel","console","log","toUpperCase","error","predictDigit","dataURL","profile","archiveArray","patientName","tensor","debugCanvas","preprocessDrawing","prediction","predict","predictionArray","array","predictedDigit","indexOf","Math","max","confidence","warn","blob","Promise","res","toBlob","timestamp","Date","now","toDataURL","push","name","text","metaBlob","Blob","type","includeCanvas","image","Image","src","onload","canvas","document","createElement","width","height","ctx","getContext","drawImage","preprocessCanvas","resized","resizedCtx","imgData","getImageData","data","gray","i","length","avg","tensor2d","pixelSum","sum","dataSync","binary","greater","scalar","toFloat","activePixels","isVerySmall","detectProfile","centerImage","smoothLevel","gaussianSmooth","dilate","binarize","input","reshape","browser","toPixels","arraySync","arr","cx","cy","y","x","val","shiftX","round","shiftY","padded","pad","begin","size","safeBegin","map","v","min","slice","level","kernelArray","kernel","tensor4d","row","div","conv2d","maxPool","threshold","isFaint","isSmall","isThin"],"sources":["C:/Users/DELL/Desktop/HandwritingTherapyApp/frontend/src/agents/cnnAgent.js"],"sourcesContent":["// agents/cnnAgent.js\r\nimport * as tf from '@tensorflow/tfjs';\r\n\r\nlet model = null;\r\nlet currentLanguage = null;\r\n\r\nexport async function loadModel(lang = \"en\") {\r\n  if (model && currentLanguage === lang) return model;\r\n\r\n  const path = lang === \"ar\"\r\n    ? \"/models/model_tfjs_hala/model_tfjs/model.json\"\r\n    : \"/models/ENGLISH/model.json\";\r\n\r\n  try {\r\n    model = await tf.loadLayersModel(path);\r\n    currentLanguage = lang;\r\n    console.log(`‚úÖ ${lang.toUpperCase()} model loaded.`);\r\n  } catch (error) {\r\n    console.error(`‚ùå Failed to load ${lang} model:`, error);\r\n    throw error;\r\n  }\r\n\r\n  return model;\r\n}\r\n\r\nexport async function predictDigit(dataURL, lang = \"en\", profile = null, archiveArray = null, patientName = \"Anonymous\") {\r\n  await loadModel(lang);\r\n\r\n  const { tensor, debugCanvas } = await preprocessDrawing(dataURL, profile, true);\r\n  const prediction = model.predict(tensor);\r\n  const predictionArray = await prediction.array();\r\n  const predictedDigit = predictionArray[0].indexOf(Math.max(...predictionArray[0]));\r\n  const confidence = Math.max(...predictionArray[0]);\r\n\r\n  if (confidence < 0.6 && profile !== \"standard\") {\r\n    console.warn(\"‚ö†Ô∏è Low confidence. Consider fallback to less aggressive preprocessing.\");\r\n  }\r\n\r\n  if (archiveArray && debugCanvas) {\r\n    const blob = await new Promise(res => debugCanvas.toBlob(res, \"image/png\"));\r\n    const timestamp = Date.now();\r\n\r\n    console.log(\"üß™ Preprocessed image (debug view):\", debugCanvas.toDataURL(\"image/png\"));\r\n\r\n    archiveArray.push({\r\n      name: `digit_${predictedDigit}_${timestamp}.png`,\r\n      blob,\r\n    });\r\n\r\n    const text = `Prediction: ${predictedDigit}\\nTimestamp: ${timestamp}\\nPatient: ${patientName}`;\r\n    const metaBlob = new Blob([text], { type: \"text/plain\" });\r\n\r\n    archiveArray.push({\r\n      name: `digit_${predictedDigit}_${timestamp}.txt`,\r\n      blob: metaBlob,\r\n    });\r\n  }\r\n\r\n  return predictedDigit;\r\n}\r\n\r\nexport async function preprocessDrawing(dataURL, profile = null, includeCanvas = false) {\r\n  const image = new Image();\r\n  image.src = dataURL;\r\n  await new Promise((res) => (image.onload = res));\r\n\r\n  const canvas = document.createElement(\"canvas\");\r\n  canvas.width = image.width;\r\n  canvas.height = image.height;\r\n  const ctx = canvas.getContext(\"2d\");\r\n  ctx.drawImage(image, 0, 0);\r\n\r\n  return await preprocessCanvas(canvas, profile, includeCanvas);\r\n}\r\n\r\nexport async function preprocessCanvas(canvas, profile = null, includeCanvas = false) {\r\n  const resized = document.createElement(\"canvas\");\r\n  resized.width = 28;\r\n  resized.height = 28;\r\n  const resizedCtx = resized.getContext(\"2d\");\r\n  resizedCtx.drawImage(canvas, 0, 0, 28, 28);\r\n\r\n  const imgData = resizedCtx.getImageData(0, 0, 28, 28);\r\n  const data = imgData.data;\r\n  const gray = [];\r\n  for (let i = 0; i < data.length; i += 4) {\r\n    const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\r\n    gray.push(1.0 - avg / 255);\r\n  }\r\n\r\n  let tensor = tf.tensor2d(gray, [28, 28]);\r\n\r\n  const pixelSum = tensor.sum().dataSync()[0];\r\n  const binary = tensor.greater(tf.scalar(0.15)).toFloat();\r\n  const activePixels = binary.sum().dataSync()[0];\r\n  const isVerySmall = activePixels < 60 || pixelSum < 25;\r\n\r\n  if (!profile) {\r\n    profile = detectProfile(pixelSum, activePixels);\r\n    console.log(\"üß† Auto-selected profile:\", profile);\r\n  }\r\n\r\n  tensor = centerImage(tensor);\r\n\r\n  if (profile === \"standard\") {\r\n    // Keep grayscale detail, no blur or binarization\r\n    console.log(\"üéØ Standard profile: Keeping raw grayscale\");\r\n  } else {\r\n    const smoothLevel = activePixels < 80 ? \"strong\" : \"light\";\r\n    tensor = gaussianSmooth(tensor, smoothLevel);\r\n\r\n    if (!isVerySmall && tensor.sum().dataSync()[0] < 30) {\r\n      tensor = dilate(tensor);\r\n    }\r\n\r\n    tensor = binarize(tensor, 0.25);\r\n  }\r\n\r\n  const input = tensor.reshape([1, 28, 28, 1]);\r\n\r\n  let debugCanvas = null;\r\n  if (includeCanvas) {\r\n    debugCanvas = document.createElement(\"canvas\");\r\n    debugCanvas.width = 28;\r\n    debugCanvas.height = 28;\r\n    await tf.browser.toPixels(tensor, debugCanvas);\r\n  }\r\n\r\n  return { tensor: input, debugCanvas };\r\n}\r\n\r\nfunction centerImage(tensor) {\r\n  const sum = tensor.sum().arraySync();\r\n  if (sum === 0) return tensor;\r\n\r\n  const arr = tensor.arraySync();\r\n  let cx = 0, cy = 0;\r\n\r\n  for (let y = 0; y < 28; y++) {\r\n    for (let x = 0; x < 28; x++) {\r\n      const val = arr[y][x];\r\n      cx += x * val;\r\n      cy += y * val;\r\n    }\r\n  }\r\n\r\n  cx /= sum;\r\n  cy /= sum;\r\n\r\n  const shiftX = Math.round(14 - cx);\r\n  const shiftY = Math.round(14 - cy);\r\n\r\n  const padded = tf.pad(tensor, [[1, 1], [1, 1]], 0);\r\n  const begin = [1 - shiftY, 1 - shiftX];\r\n  const size = [28, 28];\r\n  const safeBegin = begin.map(v => Math.max(0, Math.min(2, v)));\r\n\r\n  return tf.slice(padded, safeBegin, size);\r\n}\r\n\r\nfunction gaussianSmooth(tensor, level = \"strong\") {\r\n  let kernelArray;\r\n\r\n  if (level === \"light\") {\r\n    kernelArray = [\r\n      [0, 1, 0],\r\n      [1, 4, 1],\r\n      [0, 1, 0]\r\n    ];\r\n  } else {\r\n    kernelArray = [\r\n      [1, 2, 1],\r\n      [2, 4, 2],\r\n      [1, 2, 1]\r\n    ];\r\n  }\r\n\r\n  const kernel = tf.tensor4d(\r\n    kernelArray.map(row => row.map(val => [[val]])),\r\n    [3, 3, 1, 1]\r\n  ).div(level === \"light\" ? 8 : 16);\r\n\r\n  return tf.conv2d(tensor.reshape([1, 28, 28, 1]), kernel, 1, 'same').reshape([28, 28]);\r\n}\r\n\r\nfunction dilate(tensor) {\r\n  return tf.maxPool(tensor.reshape([1, 28, 28, 1]), [3, 3], [1, 1], 'same').reshape([28, 28]);\r\n}\r\n\r\nfunction binarize(tensor, threshold = 0.25) {\r\n  return tensor.greater(tf.scalar(threshold)).toFloat();\r\n}\r\n\r\nfunction detectProfile(pixelSum, activePixels) {\r\n  const isFaint = pixelSum < 40;\r\n  const isSmall = activePixels < 120;\r\n  const isThin = activePixels < 80 && pixelSum / activePixels < 0.5;\r\n\r\n  if (isFaint || isSmall || isThin) return \"parkinson-enhanced\";\r\n  return \"standard\";\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}