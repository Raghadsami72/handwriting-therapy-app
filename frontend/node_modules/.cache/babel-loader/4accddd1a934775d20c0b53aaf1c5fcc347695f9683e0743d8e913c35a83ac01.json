{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\HandwritingTherapyApp\\\\frontend\\\\src\\\\components\\\\CanvasDrawing.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { ClipLoader } from \"react-spinners\";\nimport successSound from \"../assets/success-chime.mp3\";\nimport { startTracking, recordStrokePoint, finalizeStroke } from \"../agents/tracking_agent\";\nimport { logAttempt } from \"../agents/tracking_agent/session_logger\";\nimport FloatingDigit from \"./FloatingDigit\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CanvasDrawing({\n  mcp,\n  patientName,\n  sessionManager,\n  onComplete\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const drawingRef = useRef(false);\n  const [processing, setProcessing] = useState(false);\n  const [predictionCount, setPredictionCount] = useState(0);\n  const [canvasReady, setCanvasReady] = useState(false);\n  const [hasDrawn, setHasDrawn] = useState(false);\n  const [floatingDigit, setFloatingDigit] = useState(null);\n  const successAudio = new Audio(successSound);\n  const applyCanvasStyles = useCallback(() => {\n    const ctx = ctxRef.current;\n    if (!ctx || !canvasRef.current) return;\n    ctx.fillStyle = \"white\";\n    ctx.strokeStyle = \"black\";\n    ctx.lineWidth = 12;\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n    ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  }, []);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext(\"2d\");\n    ctxRef.current = ctx;\n    applyCanvasStyles();\n    startTracking({\n      patientName\n    });\n    const getPosition = e => {\n      var _e$touches, _e$touches$, _e$touches2, _e$touches2$, _e$pressure;\n      const rect = canvas.getBoundingClientRect();\n      return {\n        x: (e.clientX || ((_e$touches = e.touches) === null || _e$touches === void 0 ? void 0 : (_e$touches$ = _e$touches[0]) === null || _e$touches$ === void 0 ? void 0 : _e$touches$.clientX)) - rect.left,\n        y: (e.clientY || ((_e$touches2 = e.touches) === null || _e$touches2 === void 0 ? void 0 : (_e$touches2$ = _e$touches2[0]) === null || _e$touches2$ === void 0 ? void 0 : _e$touches2$.clientY)) - rect.top,\n        pressure: (_e$pressure = e.pressure) !== null && _e$pressure !== void 0 ? _e$pressure : 0.5,\n        timestamp: Date.now()\n      };\n    };\n    const handlePointerDown = e => {\n      const ctx = ctxRef.current;\n      if (!ctx) return;\n      const point = getPosition(e);\n      ctx.beginPath();\n      ctx.moveTo(point.x, point.y);\n      recordStrokePoint(point);\n      drawingRef.current = true;\n      setHasDrawn(true);\n    };\n    const handlePointerMove = e => {\n      if (!drawingRef.current) return;\n      const ctx = ctxRef.current;\n      const point = getPosition(e);\n      ctx.lineTo(point.x, point.y);\n      ctx.stroke();\n      recordStrokePoint(point);\n    };\n    const handlePointerUp = () => {\n      if (!drawingRef.current) return;\n      const ctx = ctxRef.current;\n      ctx.closePath();\n      drawingRef.current = false;\n      finalizeStroke();\n    };\n    canvas.addEventListener(\"pointerdown\", handlePointerDown);\n    canvas.addEventListener(\"pointermove\", handlePointerMove);\n    canvas.addEventListener(\"pointerup\", handlePointerUp);\n    canvas.addEventListener(\"pointercancel\", handlePointerUp);\n    setCanvasReady(true);\n    return () => {\n      canvas.removeEventListener(\"pointerdown\", handlePointerDown);\n      canvas.removeEventListener(\"pointermove\", handlePointerMove);\n      canvas.removeEventListener(\"pointerup\", handlePointerUp);\n      canvas.removeEventListener(\"pointercancel\", handlePointerUp);\n    };\n  }, [patientName, applyCanvasStyles]);\n  const clearCanvas = () => {\n    if (!canvasRef.current || !ctxRef.current) return;\n    applyCanvasStyles();\n    setHasDrawn(false);\n    drawingRef.current = false;\n  };\n  const handlePredict = async () => {\n    if (!canvasRef.current || !hasDrawn) {\n      toast.error(\"Please draw something first!\");\n      return;\n    }\n    console.log(\"🎯 Using sessionManager.processDrawing with digit:\", currentDigit);\n    try {\n      var _sessionManager$getCu, _sessionManager$getSt;\n      setProcessing(true);\n      const dataURL = canvasRef.current.toDataURL(\"image/png\");\n      const currentDigit = (_sessionManager$getCu = sessionManager.getCurrentDigit) === null || _sessionManager$getCu === void 0 ? void 0 : _sessionManager$getCu.call(sessionManager);\n      const {\n        predictedDigit,\n        feedbackText\n      } = await sessionManager.processDrawing(dataURL, currentDigit);\n      const correct = parseInt(predictedDigit) === currentDigit;\n      const strokes = (_sessionManager$getSt = sessionManager.getStrokes) === null || _sessionManager$getSt === void 0 ? void 0 : _sessionManager$getSt.call(sessionManager);\n\n      // ✨ Show feedback float\n      setFloatingDigit({\n        digit: predictedDigit,\n        isCorrect: correct\n      });\n      setTimeout(() => setFloatingDigit(null), 1200);\n\n      // ✅ Log attempt to local storage (frontend dashboard)\n      logAttempt({\n        targetDigit: currentDigit,\n        predictedDigit: parseInt(predictedDigit),\n        correct,\n        feedbackText,\n        timestamp: new Date().toISOString(),\n        patientName\n      });\n\n      // 🎉 UI response\n      if (correct) {\n        successAudio.play();\n        toast.success(`✅ Correct! You wrote ${currentDigit}\nFeedback: ${feedbackText}`, {\n          duration: 5000,\n          style: {\n            whiteSpace: \"pre-line\"\n          }\n        });\n        setPredictionCount(prev => prev + 1);\n        onComplete === null || onComplete === void 0 ? void 0 : onComplete(predictedDigit, correct, feedbackText, strokes);\n      } else {\n        toast.error(`❌ Try again! You wrote ${predictedDigit}, not ${currentDigit}.`);\n      }\n      clearCanvas();\n    } catch (error) {\n      console.error(\"Prediction failed:\", error);\n      toast.error(\"Something went wrong while predicting. Please try again.\");\n    } finally {\n      setProcessing(false);\n    }\n  };\n  const commonButtonClasses = \"px-6 py-2 rounded-full text-white font-semibold transition duration-300 transform hover:scale-105 focus:outline-none focus:ring-2\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative flex flex-col items-center space-y-4 mt-4 w-full max-w-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"z-50 rounded-xl border bg-white border-black cursor-crosshair\",\n      width: 300,\n      height: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePredict,\n        className: `${commonButtonClasses} bg-blue-500 hover:bg-blue-600 focus:ring-blue-300 flex items-center justify-center gap-2`,\n        disabled: processing || !canvasReady,\n        children: processing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ClipLoader, {\n            size: 20,\n            color: \"#fff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), \"Processing...\"]\n        }, void 0, true) : \"Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearCanvas,\n        className: `${commonButtonClasses} bg-gray-500 hover:bg-gray-600 focus:ring-gray-300`,\n        disabled: processing || !canvasReady,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), predictionCount > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-blue-700 font-medium\",\n      children: [\"\\u2728 Predictions made: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-bold\",\n        children: predictionCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FloatingDigit, {\n      digit: floatingDigit === null || floatingDigit === void 0 ? void 0 : floatingDigit.digit,\n      isCorrect: floatingDigit === null || floatingDigit === void 0 ? void 0 : floatingDigit.isCorrect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s(CanvasDrawing, \"BRd5aDxclTQJK2Cm+UyWdl7S2xc=\");\n_c = CanvasDrawing;\nexport default CanvasDrawing;\nvar _c;\n$RefreshReg$(_c, \"CanvasDrawing\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","toast","ClipLoader","successSound","startTracking","recordStrokePoint","finalizeStroke","logAttempt","FloatingDigit","jsxDEV","_jsxDEV","Fragment","_Fragment","CanvasDrawing","mcp","patientName","sessionManager","onComplete","_s","canvasRef","ctxRef","drawingRef","processing","setProcessing","predictionCount","setPredictionCount","canvasReady","setCanvasReady","hasDrawn","setHasDrawn","floatingDigit","setFloatingDigit","successAudio","Audio","applyCanvasStyles","ctx","current","fillStyle","strokeStyle","lineWidth","lineCap","lineJoin","fillRect","width","height","canvas","getContext","getPosition","e","_e$touches","_e$touches$","_e$touches2","_e$touches2$","_e$pressure","rect","getBoundingClientRect","x","clientX","touches","left","y","clientY","top","pressure","timestamp","Date","now","handlePointerDown","point","beginPath","moveTo","handlePointerMove","lineTo","stroke","handlePointerUp","closePath","addEventListener","removeEventListener","clearCanvas","handlePredict","error","console","log","currentDigit","_sessionManager$getCu","_sessionManager$getSt","dataURL","toDataURL","getCurrentDigit","call","predictedDigit","feedbackText","processDrawing","correct","parseInt","strokes","getStrokes","digit","isCorrect","setTimeout","targetDigit","toISOString","play","success","duration","style","whiteSpace","prev","commonButtonClasses","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","size","color","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/HandwritingTherapyApp/frontend/src/components/CanvasDrawing.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from \"react\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { ClipLoader } from \"react-spinners\";\r\nimport successSound from \"../assets/success-chime.mp3\";\r\nimport { startTracking, recordStrokePoint, finalizeStroke } from \"../agents/tracking_agent\";\r\nimport { logAttempt } from \"../agents/tracking_agent/session_logger\";\r\nimport FloatingDigit from \"./FloatingDigit\";\r\n\r\nfunction CanvasDrawing({ mcp, patientName, sessionManager, onComplete }) {\r\n  const canvasRef = useRef(null);\r\n  const ctxRef = useRef(null);\r\n  const drawingRef = useRef(false);\r\n\r\n  const [processing, setProcessing] = useState(false);\r\n  const [predictionCount, setPredictionCount] = useState(0);\r\n  const [canvasReady, setCanvasReady] = useState(false);\r\n  const [hasDrawn, setHasDrawn] = useState(false);\r\n  const [floatingDigit, setFloatingDigit] = useState(null);\r\n\r\n  const successAudio = new Audio(successSound);\r\n\r\n  const applyCanvasStyles = useCallback(() => {\r\n    const ctx = ctxRef.current;\r\n    if (!ctx || !canvasRef.current) return;\r\n\r\n    ctx.fillStyle = \"white\";\r\n    ctx.strokeStyle = \"black\";\r\n    ctx.lineWidth = 12;\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctxRef.current = ctx;\r\n    applyCanvasStyles();\r\n    startTracking({ patientName });\r\n\r\n    const getPosition = (e) => {\r\n      const rect = canvas.getBoundingClientRect();\r\n      return {\r\n        x: (e.clientX || e.touches?.[0]?.clientX) - rect.left,\r\n        y: (e.clientY || e.touches?.[0]?.clientY) - rect.top,\r\n        pressure: e.pressure ?? 0.5,\r\n        timestamp: Date.now(),\r\n      };\r\n    };\r\n\r\n    const handlePointerDown = (e) => {\r\n      const ctx = ctxRef.current;\r\n      if (!ctx) return;\r\n\r\n      const point = getPosition(e);\r\n      ctx.beginPath();\r\n      ctx.moveTo(point.x, point.y);\r\n      recordStrokePoint(point);\r\n      drawingRef.current = true;\r\n      setHasDrawn(true);\r\n    };\r\n\r\n    const handlePointerMove = (e) => {\r\n      if (!drawingRef.current) return;\r\n\r\n      const ctx = ctxRef.current;\r\n      const point = getPosition(e);\r\n      ctx.lineTo(point.x, point.y);\r\n      ctx.stroke();\r\n      recordStrokePoint(point);\r\n    };\r\n\r\n    const handlePointerUp = () => {\r\n      if (!drawingRef.current) return;\r\n      const ctx = ctxRef.current;\r\n      ctx.closePath();\r\n      drawingRef.current = false;\r\n      finalizeStroke();\r\n    };\r\n\r\n    canvas.addEventListener(\"pointerdown\", handlePointerDown);\r\n    canvas.addEventListener(\"pointermove\", handlePointerMove);\r\n    canvas.addEventListener(\"pointerup\", handlePointerUp);\r\n    canvas.addEventListener(\"pointercancel\", handlePointerUp);\r\n\r\n    setCanvasReady(true);\r\n\r\n    return () => {\r\n      canvas.removeEventListener(\"pointerdown\", handlePointerDown);\r\n      canvas.removeEventListener(\"pointermove\", handlePointerMove);\r\n      canvas.removeEventListener(\"pointerup\", handlePointerUp);\r\n      canvas.removeEventListener(\"pointercancel\", handlePointerUp);\r\n    };\r\n  }, [patientName, applyCanvasStyles]);\r\n\r\n  const clearCanvas = () => {\r\n    if (!canvasRef.current || !ctxRef.current) return;\r\n    applyCanvasStyles();\r\n    setHasDrawn(false);\r\n    drawingRef.current = false;\r\n  };\r\n\r\n  const handlePredict = async () => {\r\n    if (!canvasRef.current || !hasDrawn) {\r\n      toast.error(\"Please draw something first!\");\r\n      return;\r\n    }\r\n    console.log(\"🎯 Using sessionManager.processDrawing with digit:\", currentDigit);\r\n    try {\r\n      setProcessing(true);\r\n      const dataURL = canvasRef.current.toDataURL(\"image/png\");\r\n      const currentDigit = sessionManager.getCurrentDigit?.();\r\n      const { predictedDigit, feedbackText } = await sessionManager.processDrawing(dataURL, currentDigit);\r\n      const correct = parseInt(predictedDigit) === currentDigit;\r\n      const strokes = sessionManager.getStrokes?.();\r\n\r\n      // ✨ Show feedback float\r\n      setFloatingDigit({ digit: predictedDigit, isCorrect: correct });\r\n      setTimeout(() => setFloatingDigit(null), 1200);\r\n\r\n      // ✅ Log attempt to local storage (frontend dashboard)\r\n      logAttempt({\r\n        targetDigit: currentDigit,\r\n        predictedDigit: parseInt(predictedDigit),\r\n        correct,\r\n        feedbackText,\r\n        timestamp: new Date().toISOString(),\r\n        patientName,\r\n      });\r\n\r\n      // 🎉 UI response\r\n      if (correct) {\r\n        successAudio.play();\r\n        toast.success(`✅ Correct! You wrote ${currentDigit}\r\nFeedback: ${feedbackText}`, {\r\n          duration: 5000,\r\n          style: { whiteSpace: \"pre-line\" },\r\n        });\r\n        setPredictionCount((prev) => prev + 1);\r\n        onComplete?.(predictedDigit, correct, feedbackText, strokes);\r\n      } else {\r\n        toast.error(`❌ Try again! You wrote ${predictedDigit}, not ${currentDigit}.`);\r\n      }\r\n\r\n      clearCanvas();\r\n    } catch (error) {\r\n      console.error(\"Prediction failed:\", error);\r\n      toast.error(\"Something went wrong while predicting. Please try again.\");\r\n    } finally {\r\n      setProcessing(false);\r\n    }\r\n  };\r\n\r\n  const commonButtonClasses =\r\n    \"px-6 py-2 rounded-full text-white font-semibold transition duration-300 transform hover:scale-105 focus:outline-none focus:ring-2\";\r\n\r\n  return (\r\n    <div className=\"relative flex flex-col items-center space-y-4 mt-4 w-full max-w-md\">\r\n      <canvas\r\n        ref={canvasRef}\r\n        className=\"z-50 rounded-xl border bg-white border-black cursor-crosshair\"\r\n        width={300}\r\n        height={300}\r\n      />\r\n\r\n      <div className=\"flex flex-wrap gap-4\">\r\n        <button\r\n          onClick={handlePredict}\r\n          className={`${commonButtonClasses} bg-blue-500 hover:bg-blue-600 focus:ring-blue-300 flex items-center justify-center gap-2`}\r\n          disabled={processing || !canvasReady}\r\n        >\r\n          {processing ? (\r\n            <>\r\n              <ClipLoader size={20} color=\"#fff\" />\r\n              Processing...\r\n            </>\r\n          ) : (\r\n            \"Predict\"\r\n          )}\r\n        </button>\r\n\r\n        <button\r\n          onClick={clearCanvas}\r\n          className={`${commonButtonClasses} bg-gray-500 hover:bg-gray-600 focus:ring-gray-300`}\r\n          disabled={processing || !canvasReady}\r\n        >\r\n          Clear\r\n        </button>\r\n      </div>\r\n\r\n      {predictionCount > 0 && (\r\n        <p className=\"text-blue-700 font-medium\">\r\n          ✨ Predictions made: <span className=\"font-bold\">{predictionCount}</span>\r\n        </p>\r\n      )}\r\n      <FloatingDigit digit={floatingDigit?.digit} isCorrect={floatingDigit?.isCorrect} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CanvasDrawing;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}